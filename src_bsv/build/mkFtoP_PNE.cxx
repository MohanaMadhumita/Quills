/*
 * Generated by Bluespec Compiler (build cd96b228)
 * 
 * On Tue Jun 15 18:31:46 IST 2021
 * 
 */
#include "bluesim_primitives.h"
#include "mkFtoP_PNE.h"


/* Constructor */
MOD_mkFtoP_PNE::MOD_mkFtoP_PNE(tSimStateHdl simHdl,
			       char const *name,
			       Module *parent,
			       tUInt8 ARG_verbosity)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_ffO(simHdl, "ffO", this, 24u, 1u, (tUInt8)1u, 0u),
    PORT_RST_N((tUInt8)1u),
    PORT_verbosity(ARG_verbosity)
{
  symbol_count = 2u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkFtoP_PNE::init_symbols_0()
{
  init_symbol(&symbols[0u], "ffO", SYM_MODULE, &INST_ffO);
  init_symbol(&symbols[1u], "verbosity", SYM_PORT, &PORT_verbosity, 2u);
}


/* Rule actions */


/* Methods */

void MOD_mkFtoP_PNE::METH_request_put(tUInt32 ARG_request_put)
{
  tUInt32 DEF_request_put_BIT_31_CONCAT_IF_request_put_BITS__ETC___d61;
  tUInt8 DEF_x__h797;
  tUInt8 DEF_x__h785;
  tUInt8 DEF_x__h798;
  tUInt8 DEF_request_put_BITS_30_TO_23_EQ_255___d3;
  tUInt8 DEF_y__h799;
  tUInt8 DEF_request_put_BITS_22_TO_0_EQ_0___d5;
  tUInt8 DEF_is_frac_zero__h144;
  tUInt8 DEF_x__h698;
  tUInt8 DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d16;
  tUInt8 DEF_x_scale__h164;
  tUInt8 DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d17;
  tUInt8 DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d25;
  tUInt8 DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d21;
  tUInt32 DEF_pn_frac__h145;
  tUInt8 DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d41;
  tUInt8 DEF_frac_msb__h142;
  tUInt8 DEF_x__h163;
  tUInt8 DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d30;
  tUInt8 DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d31;
  tUInt8 DEF_IF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MIN_ETC___d35;
  tUInt8 DEF_IF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MIN_ETC___d44;
  tUInt8 DEF_expo_f_unsigned__h132;
  tUInt32 DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127___d14;
  tUInt8 DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d15;
  tUInt32 DEF_frac_truncate_zero__h609;
  tUInt32 DEF_a__h611;
  tUInt32 DEF_x__h606;
  tUInt32 DEF_x_BITS_11_TO_0___h694;
  tUInt32 DEF_frac_f__h134;
  tUInt8 DEF_x__h687;
  tUInt32 DEF_frac__h143;
  DEF_frac_f__h134 = (tUInt32)(8388607u & ARG_request_put);
  DEF_a__h611 = (tUInt32)(4095u & (ARG_request_put >> 11u));
  DEF_frac__h143 = 8191u & ((((tUInt32)((tUInt8)1u)) << 12u) | DEF_a__h611);
  DEF_frac_truncate_zero__h609 = (tUInt32)(1023u & ARG_request_put);
  DEF_expo_f_unsigned__h132 = (tUInt8)((tUInt8)255u & (ARG_request_put >> 23u));
  DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127___d14 = 511u & ((511u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_expo_f_unsigned__h132))) - 127u);
  DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d15 = (tUInt8)((tUInt8)255u & DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127___d14);
  DEF_x__h163 = (tUInt8)(ARG_request_put >> 31u);
  DEF_frac_msb__h142 = (tUInt8)((tUInt8)1u & (ARG_request_put >> 10u));
  DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d21 = (tUInt8)255u & (DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d15 - (tUInt8)228u);
  DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d25 = (tUInt8)255u & (DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d15 - (tUInt8)28u);
  DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d17 = primSLE8(1u,
									   8u,
									   (tUInt8)(DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d15),
									   8u,
									   (tUInt8)28u);
  DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d16 = primSLT8(1u,
									   8u,
									   (tUInt8)(DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d15),
									   8u,
									   (tUInt8)228u);
  DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d30 = DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d16 ? (tUInt8)((tUInt8)31u & (primSLE8(1u,
																				  8u,
																				  (tUInt8)(DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d21),
																				  8u,
																				  (tUInt8)241u) ? (tUInt8)241u : DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d21)) : (DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d17 ? (tUInt8)0u : (tUInt8)((tUInt8)31u & (primSLE8(1u,
																																														  8u,
																																														  (tUInt8)(DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d25),
																																														  8u,
																																														  (tUInt8)15u) ? DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d25 : (tUInt8)15u)));
  DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d31 = (tUInt8)(DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d30 >> 4u);
  DEF_IF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MIN_ETC___d35 = DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d31 ? (tUInt8)31u & -DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d30 : DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d30;
  DEF_x__h687 = (tUInt8)31u & (DEF_IF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MIN_ETC___d35 + (tUInt8)1u);
  DEF_x__h606 = primShiftR32(13u, 13u, (tUInt32)(DEF_frac__h143), 5u, (tUInt8)(DEF_x__h687));
  DEF_x_BITS_11_TO_0___h694 = (tUInt32)(4095u & DEF_x__h606);
  DEF_IF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MIN_ETC___d44 = (tUInt8)((tUInt8)15u & DEF_x__h687);
  DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d41 = DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d30 == (tUInt8)0u;
  DEF_pn_frac__h145 = DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d31 ? DEF_x_BITS_11_TO_0___h694 : (DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d41 ? DEF_a__h611 : 4095u);
  DEF_x_scale__h164 = DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d16 ? (tUInt8)36u : (DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127_ETC___d17 ? (tUInt8)((tUInt8)63u & DEF__0_CONCAT_request_put_BITS_30_TO_23_3_MINUS_127___d14) : (tUInt8)28u);
  DEF_x__h698 = DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d31 ? primExtract8(1u,
											    13u,
											    (tUInt32)(DEF_frac__h143),
											    4u,
											    (tUInt8)(DEF_IF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MIN_ETC___d44),
											    4u,
											    (tUInt8)(DEF_IF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MIN_ETC___d44)) : !DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d41 || DEF_frac_msb__h142;
  DEF_is_frac_zero__h144 = DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d31 ? primExtract32(32u,
													13u,
													(tUInt32)(DEF_frac__h143),
													4u,
													(tUInt8)((tUInt8)((tUInt8)15u & DEF_IF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MIN_ETC___d35)),
													4u,
													(tUInt8)0u) == 0u : DEF_IF_0_CONCAT_request_put_BITS_30_TO_23_3_MINUS__ETC___d41;
  DEF_request_put_BITS_22_TO_0_EQ_0___d5 = DEF_frac_f__h134 == 0u;
  DEF_y__h799 = DEF_frac_truncate_zero__h609 == 0u;
  DEF_request_put_BITS_30_TO_23_EQ_255___d3 = DEF_expo_f_unsigned__h132 == (tUInt8)255u;
  DEF_x__h798 = (tUInt8)1u & ~DEF_frac_msb__h142;
  DEF_x__h797 = DEF_x__h798 & DEF_y__h799;
  DEF_x__h785 = DEF_x__h797 & DEF_is_frac_zero__h144;
  DEF_request_put_BIT_31_CONCAT_IF_request_put_BITS__ETC___d61 = 16777215u & (((((((((tUInt32)(DEF_x__h163)) << 23u) | (((tUInt32)(DEF_request_put_BITS_30_TO_23_EQ_255___d3 && DEF_request_put_BITS_22_TO_0_EQ_0___d5 ? (tUInt8)1u : (DEF_expo_f_unsigned__h132 == (tUInt8)0u && DEF_request_put_BITS_22_TO_0_EQ_0___d5 ? (tUInt8)2u : (tUInt8)0u))) << 21u)) | (((tUInt32)(DEF_request_put_BITS_30_TO_23_EQ_255___d3 && !DEF_request_put_BITS_22_TO_0_EQ_0___d5)) << 20u)) | (((tUInt32)(DEF_x_scale__h164)) << 14u)) | (DEF_pn_frac__h145 << 2u)) | (((tUInt32)(DEF_x__h698)) << 1u)) | (tUInt32)(DEF_x__h785));
  INST_ffO.METH_enq(DEF_request_put_BIT_31_CONCAT_IF_request_put_BITS__ETC___d61);
}

tUInt8 MOD_mkFtoP_PNE::METH_RDY_request_put()
{
  tUInt8 DEF_CAN_FIRE_request_put;
  tUInt8 PORT_RDY_request_put;
  DEF_CAN_FIRE_request_put = INST_ffO.METH_i_notFull();
  PORT_RDY_request_put = DEF_CAN_FIRE_request_put;
  return PORT_RDY_request_put;
}

tUInt32 MOD_mkFtoP_PNE::METH_response_get()
{
  tUInt32 DEF_response_get__avValue1;
  tUInt32 PORT_response_get;
  DEF_response_get__avValue1 = INST_ffO.METH_first();
  PORT_response_get = DEF_response_get__avValue1;
  INST_ffO.METH_deq();
  return PORT_response_get;
}

tUInt8 MOD_mkFtoP_PNE::METH_RDY_response_get()
{
  tUInt8 DEF_CAN_FIRE_response_get;
  tUInt8 PORT_RDY_response_get;
  DEF_CAN_FIRE_response_get = INST_ffO.METH_i_notEmpty();
  PORT_RDY_response_get = DEF_CAN_FIRE_response_get;
  return PORT_RDY_response_get;
}


/* Reset routines */

void MOD_mkFtoP_PNE::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_ffO.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkFtoP_PNE::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkFtoP_PNE::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_ffO.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkFtoP_PNE::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 2u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  num = INST_ffO.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkFtoP_PNE::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkFtoP_PNE &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkFtoP_PNE::vcd_defs(tVCDDumpType dt, MOD_mkFtoP_PNE &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
    }
}

void MOD_mkFtoP_PNE::vcd_prims(tVCDDumpType dt, MOD_mkFtoP_PNE &backing)
{
  INST_ffO.dump_VCD(dt, backing.INST_ffO);
}
