/*
 * Generated by Bluespec Compiler (build cd96b228)
 * 
 * On Tue Jun 15 18:31:46 IST 2021
 * 
 */
#include "bluesim_primitives.h"
#include "mkQuire_Adder.h"


/* Literal declarations */
static unsigned int const UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
															   2863311530u,
															   2863311530u,
															   2863311530u,
															   2863311530u,
															   2863311530u,
															   2863311530u,
															   2863311530u,
															   682u };
static tUWide const UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa(267u,
													   UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_arr);
static unsigned int const UWide_literal_128_haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
											2863311530u,
											2863311530u,
											2863311530u };
static tUWide const UWide_literal_128_haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa(128u,
									UWide_literal_128_haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_arr);


/* Constructor */
MOD_mkQuire_Adder::MOD_mkQuire_Adder(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_fifo_input_quire(simHdl, "fifo_input_quire", this, 266u, 1u, (tUInt8)1u, 0u),
    INST_i(simHdl, "i", this, 2u),
    INST_normalizer(simHdl, "normalizer", this, (tUInt8)3u),
    INST_quire_accumulator(simHdl, "quire_accumulator", this, (tUInt8)3u),
    INST_quire_stage_s_fifof_rv(simHdl,
				"quire_stage_s_fifof_rv",
				this,
				267u,
				bs_wide_tmp(267u).set_bits_in_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word32(8u,
																					     0u,
																					     11u),
								   8u,
								   0u,
								   11u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(7u),
										       7u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(6u),
													  6u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(5u),
															     5u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(4u),
																		4u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(3u),
																				   3u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(2u),
																						      2u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(1u),
																									 1u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(0u),
																											    0u),
				(tUInt8)0u),
    INST_quire_stage_s_serverPipe_index_k(simHdl,
					  "quire_stage_s_serverPipe_index_k",
					  this,
					  1u,
					  (tUInt8)0u,
					  (tUInt8)0u),
    INST_rg_adder_busy(simHdl, "rg_adder_busy", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_rg_final_posit(simHdl, "rg_final_posit", this, 16u),
    INST_rg_state(simHdl, "rg_state", this, 2u, (tUInt8)0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_quire_stage_s_fifof_rv_port1__read____d51(267u),
    DEF_quire_stage_s_fifof_rv_port0__read____d1(267u),
    DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23(128u),
    DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22(128u),
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25(128u),
    DEF__1_CONCAT_add_put___d49(267u),
    DEF__0_CONCAT_DONTCARE___d13(267u),
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35(133u),
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34(130u)
{
  PORT_add_put.setSize(266u);
  PORT_add_put.clear();
  PORT_write_quire.setSize(133u);
  PORT_write_quire.clear();
  symbol_count = 15u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkQuire_Adder::init_symbols_0()
{
  init_symbol(&symbols[0u], "add_put", SYM_PORT, &PORT_add_put, 266u);
  init_symbol(&symbols[1u], "fifo_input_quire", SYM_MODULE, &INST_fifo_input_quire);
  init_symbol(&symbols[2u], "i", SYM_MODULE, &INST_i);
  init_symbol(&symbols[3u], "normalizer", SYM_MODULE, &INST_normalizer);
  init_symbol(&symbols[4u], "quire_accumulator", SYM_MODULE, &INST_quire_accumulator);
  init_symbol(&symbols[5u], "quire_stage_s_fifof_rv", SYM_MODULE, &INST_quire_stage_s_fifof_rv);
  init_symbol(&symbols[6u],
	      "quire_stage_s_serverPipe_index_k",
	      SYM_MODULE,
	      &INST_quire_stage_s_serverPipe_index_k);
  init_symbol(&symbols[7u], "RL_add_quire", SYM_RULE);
  init_symbol(&symbols[8u], "RL_get_posit", SYM_RULE);
  init_symbol(&symbols[9u], "RL_read_posit", SYM_RULE);
  init_symbol(&symbols[10u], "rg_adder_busy", SYM_MODULE, &INST_rg_adder_busy);
  init_symbol(&symbols[11u], "rg_adder_busy__h647", SYM_DEF, &DEF_rg_adder_busy__h647, 1u);
  init_symbol(&symbols[12u], "rg_final_posit", SYM_MODULE, &INST_rg_final_posit);
  init_symbol(&symbols[13u], "rg_state", SYM_MODULE, &INST_rg_state);
  init_symbol(&symbols[14u], "write_quire", SYM_PORT, &PORT_write_quire, 133u);
}


/* Rule actions */

void MOD_mkQuire_Adder::RL_add_quire()
{
  tUInt8 DEF_x__h662;
  tUInt8 DEF_NOT_quire_stage_s_serverPipe_index_k_0_AND_qui_ETC___d12;
  tUInt8 DEF_i_EQ_1___d36;
  tUInt8 DEF_x__h1553;
  tUInt8 DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d21;
  tUInt8 DEF_x__h1558;
  tUInt8 DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d17;
  tUInt8 DEF_n_frac_zero__h1055;
  tUInt8 DEF_n_frac_msb__h1054;
  tUInt8 DEF_n_frac_zero__h1064;
  tUInt8 DEF_n_frac_msb__h1063;
  tUInt8 DEF__read__h39;
  tUInt8 DEF_x__h879;
  DEF_x__h879 = INST_quire_stage_s_serverPipe_index_k.METH_read();
  DEF_quire_stage_s_fifof_rv_port0__read____d1 = INST_quire_stage_s_fifof_rv.METH_port0__read();
  DEF__read__h39 = INST_i.METH_read();
  wop_primExtractWide(128u,
		      267u,
		      DEF_quire_stage_s_fifof_rv_port0__read____d1,
		      32u,
		      262u,
		      32u,
		      135u,
		      DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23);
  wop_primExtractWide(128u,
		      267u,
		      DEF_quire_stage_s_fifof_rv_port0__read____d1,
		      32u,
		      129u,
		      32u,
		      2u,
		      DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22);
  DEF_n_frac_zero__h1064 = DEF_quire_stage_s_fifof_rv_port0__read____d1.get_bits_in_word8(4u, 5u, 1u);
  DEF_n_frac_msb__h1063 = DEF_quire_stage_s_fifof_rv_port0__read____d1.get_bits_in_word8(4u, 6u, 1u);
  DEF_n_frac_msb__h1054 = DEF_quire_stage_s_fifof_rv_port0__read____d1.get_bits_in_word8(0u, 1u, 1u);
  DEF_n_frac_zero__h1055 = DEF_quire_stage_s_fifof_rv_port0__read____d1.get_bits_in_word8(0u, 0u, 1u);
  switch (DEF_x__h879) {
  case (tUInt8)0u:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25 = DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22;
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25 = DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23;
    break;
  default:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25 = UWide_literal_128_haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
  }
  switch (DEF_x__h879) {
  case (tUInt8)0u:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d17 = DEF_quire_stage_s_fifof_rv_port0__read____d1.get_bits_in_word8(4u,
																  3u,
																  2u);
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d17 = DEF_quire_stage_s_fifof_rv_port0__read____d1.get_bits_in_word8(8u,
																  8u,
																  2u);
    break;
  default:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d17 = (tUInt8)2u;
  }
  switch (DEF_x__h879) {
  case (tUInt8)0u:
    DEF_x__h1558 = DEF_n_frac_zero__h1055;
    break;
  case (tUInt8)1u:
    DEF_x__h1558 = DEF_n_frac_zero__h1064;
    break;
  default:
    DEF_x__h1558 = (tUInt8)0u;
  }
  switch (DEF_x__h879) {
  case (tUInt8)0u:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d21 = DEF_quire_stage_s_fifof_rv_port0__read____d1.get_bits_in_word8(4u,
																  2u,
																  1u);
    break;
  case (tUInt8)1u:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d21 = DEF_quire_stage_s_fifof_rv_port0__read____d1.get_bits_in_word8(8u,
																  7u,
																  1u);
    break;
  default:
    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d21 = (tUInt8)0u;
  }
  switch (DEF_x__h879) {
  case (tUInt8)0u:
    DEF_x__h1553 = DEF_n_frac_msb__h1054;
    break;
  case (tUInt8)1u:
    DEF_x__h1553 = DEF_n_frac_msb__h1063;
    break;
  default:
    DEF_x__h1553 = (tUInt8)0u;
  }
  DEF_NOT_quire_stage_s_serverPipe_index_k_0_AND_qui_ETC___d12 = !DEF_x__h879 && (tUInt8)1u & (DEF_x__h879 + (tUInt8)1u);
  DEF_i_EQ_1___d36 = DEF__read__h39 == (tUInt8)1u;
  DEF_x__h662 = (tUInt8)3u & (DEF__read__h39 - (tUInt8)1u);
  DEF__0_CONCAT_DONTCARE___d13.set_bits_in_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word32(8u,
																			  0u,
																			  11u),
						8u,
						0u,
						11u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(7u),
								    7u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(6u),
										       6u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(5u),
													  5u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(4u),
															     4u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(3u),
																		3u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(2u),
																				   2u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(1u),
																						      1u).set_whole_word(UWide_literal_267_h2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(0u),
																									 0u);
  DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34.set_bits_in_word(DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25.get_bits_in_word8(3u,
																			       30u,
																			       2u),
										4u,
										0u,
										2u).set_whole_word(primExtract32(32u,
														 128u,
														 DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25,
														 32u,
														 125u,
														 32u,
														 94u),
												   3u).set_whole_word(primExtract32(32u,
																    128u,
																    DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25,
																    32u,
																    93u,
																    32u,
																    62u),
														      2u).set_whole_word(primExtract32(32u,
																		       128u,
																		       DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25,
																		       32u,
																		       61u,
																		       32u,
																		       30u),
																	 1u).set_whole_word(((DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25.get_bits_in_word32(0u,
																													      0u,
																													      30u) << 2u) | (((tUInt32)(DEF_x__h1553)) << 1u)) | (tUInt32)(DEF_x__h1558),
																			    0u);
  DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35.set_bits_in_word((tUInt8)31u & (((DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d17 << 3u) | (DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d21 << 2u)) | DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34.get_bits_in_word8(4u,
																																							      0u,
																																							      2u)),
										4u,
										0u,
										5u).set_whole_word(DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34.get_whole_word(3u),
												   3u).set_whole_word(DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34.get_whole_word(2u),
														      2u).set_whole_word(DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34.get_whole_word(1u),
																	 1u).set_whole_word(DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34.get_whole_word(0u),
																			    0u);
  INST_i.METH_write(DEF_x__h662);
  INST_quire_stage_s_serverPipe_index_k.METH_write(DEF_NOT_quire_stage_s_serverPipe_index_k_0_AND_qui_ETC___d12);
  if (DEF_x__h879)
    INST_quire_stage_s_fifof_rv.METH_port0__write(DEF__0_CONCAT_DONTCARE___d13);
  INST_quire_accumulator.METH_accumulate_put(DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35);
  if (DEF_i_EQ_1___d36)
    INST_rg_adder_busy.METH_write((tUInt8)0u);
}

void MOD_mkQuire_Adder::RL_read_posit()
{
  tUInt32 DEF_quire_accumulator_read_rsp_get___d43;
  tUInt32 DEF_AVMeth_quire_accumulator_read_rsp_get;
  DEF_AVMeth_quire_accumulator_read_rsp_get = INST_quire_accumulator.METH_read_rsp_get();
  DEF_quire_accumulator_read_rsp_get___d43 = DEF_AVMeth_quire_accumulator_read_rsp_get;
  INST_normalizer.METH_request_put(DEF_quire_accumulator_read_rsp_get___d43);
  INST_rg_state.METH_write((tUInt8)2u);
}

void MOD_mkQuire_Adder::RL_get_posit()
{
  tUInt32 DEF_x__h1727;
  tUInt32 DEF_AVMeth_normalizer_response_get;
  DEF_AVMeth_normalizer_response_get = INST_normalizer.METH_response_get();
  DEF_x__h1727 = (tUInt32)(DEF_AVMeth_normalizer_response_get >> 4u);
  INST_rg_final_posit.METH_write(DEF_x__h1727);
}


/* Methods */

void MOD_mkQuire_Adder::METH_add_put(tUWide ARG_add_put)
{
  PORT_add_put = ARG_add_put;
  DEF__1_CONCAT_add_put___d49.set_bits_in_word(2047u & ((((tUInt32)((tUInt8)1u)) << 10u) | ARG_add_put.get_bits_in_word32(8u,
															  0u,
															  10u)),
					       8u,
					       0u,
					       11u).set_whole_word(ARG_add_put.get_whole_word(7u),
								   7u).set_whole_word(ARG_add_put.get_whole_word(6u),
										      6u).set_whole_word(ARG_add_put.get_whole_word(5u),
													 5u).set_whole_word(ARG_add_put.get_whole_word(4u),
															    4u).set_whole_word(ARG_add_put.get_whole_word(3u),
																	       3u).set_whole_word(ARG_add_put.get_whole_word(2u),
																				  2u).set_whole_word(ARG_add_put.get_whole_word(1u),
																						     1u).set_whole_word(ARG_add_put.get_whole_word(0u),
																									0u);
  INST_rg_adder_busy.METH_write((tUInt8)1u);
  INST_quire_stage_s_fifof_rv.METH_port1__write(DEF__1_CONCAT_add_put___d49);
  INST_i.METH_write((tUInt8)2u);
}

tUInt8 MOD_mkQuire_Adder::METH_RDY_add_put()
{
  tUInt8 DEF_CAN_FIRE_add_put;
  tUInt8 PORT_RDY_add_put;
  DEF_quire_stage_s_fifof_rv_port1__read____d51 = INST_quire_stage_s_fifof_rv.METH_port1__read();
  DEF_rg_adder_busy__h647 = INST_rg_adder_busy.METH_read();
  DEF_NOT_rg_adder_busy___d50 = !DEF_rg_adder_busy__h647;
  DEF_CAN_FIRE_add_put = DEF_NOT_rg_adder_busy___d50 && !DEF_quire_stage_s_fifof_rv_port1__read____d51.get_bits_in_word8(8u,
															 10u,
															 1u);
  PORT_RDY_add_put = DEF_CAN_FIRE_add_put;
  return PORT_RDY_add_put;
}

void MOD_mkQuire_Adder::METH_read_req_adder()
{
  INST_quire_accumulator.METH_read_req();
  INST_rg_state.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkQuire_Adder::METH_RDY_read_req_adder()
{
  tUInt8 DEF_CAN_FIRE_read_req_adder;
  tUInt8 PORT_RDY_read_req_adder;
  DEF_rg_adder_busy__h647 = INST_rg_adder_busy.METH_read();
  DEF_NOT_rg_adder_busy___d50 = !DEF_rg_adder_busy__h647;
  DEF_CAN_FIRE_read_req_adder = DEF_NOT_rg_adder_busy___d50 && INST_quire_accumulator.METH_RDY_read_req();
  PORT_RDY_read_req_adder = DEF_CAN_FIRE_read_req_adder;
  return PORT_RDY_read_req_adder;
}

tUInt32 MOD_mkQuire_Adder::METH_read_posit_adder_get()
{
  tUInt32 DEF_read_posit_adder_get__avValue1;
  tUInt32 PORT_read_posit_adder_get;
  DEF_read_posit_adder_get__avValue1 = INST_rg_final_posit.METH_read();
  PORT_read_posit_adder_get = DEF_read_posit_adder_get__avValue1;
  return PORT_read_posit_adder_get;
}

tUInt8 MOD_mkQuire_Adder::METH_RDY_read_posit_adder_get()
{
  tUInt8 DEF_CAN_FIRE_read_posit_adder_get;
  tUInt8 PORT_RDY_read_posit_adder_get;
  DEF_CAN_FIRE_read_posit_adder_get = (tUInt8)1u;
  PORT_RDY_read_posit_adder_get = DEF_CAN_FIRE_read_posit_adder_get;
  return PORT_RDY_read_posit_adder_get;
}

tUWide MOD_mkQuire_Adder::METH_write_quire()
{
  PORT_write_quire = INST_quire_accumulator.METH_read_quire();
  return PORT_write_quire;
}

tUInt8 MOD_mkQuire_Adder::METH_RDY_write_quire()
{
  tUInt8 DEF_CAN_FIRE_write_quire;
  tUInt8 DEF_quire_accumulator_RDY_read_quire____d55;
  tUInt8 PORT_RDY_write_quire;
  DEF_quire_accumulator_RDY_read_quire____d55 = INST_quire_accumulator.METH_RDY_read_quire();
  DEF_rg_adder_busy__h647 = INST_rg_adder_busy.METH_read();
  DEF_NOT_rg_adder_busy___d50 = !DEF_rg_adder_busy__h647;
  DEF_CAN_FIRE_write_quire = DEF_NOT_rg_adder_busy___d50 && DEF_quire_accumulator_RDY_read_quire____d55;
  PORT_RDY_write_quire = DEF_CAN_FIRE_write_quire;
  return PORT_RDY_write_quire;
}

void MOD_mkQuire_Adder::METH_clear()
{
  tUInt32 DEF__2_CONCAT_DONTCARE___d56;
  DEF__2_CONCAT_DONTCARE___d56 = 1223338u;
  INST_quire_accumulator.METH_init_put(DEF__2_CONCAT_DONTCARE___d56);
}

tUInt8 MOD_mkQuire_Adder::METH_RDY_clear()
{
  tUInt8 DEF_CAN_FIRE_clear;
  tUInt8 PORT_RDY_clear;
  DEF_rg_adder_busy__h647 = INST_rg_adder_busy.METH_read();
  DEF_NOT_rg_adder_busy___d50 = !DEF_rg_adder_busy__h647;
  DEF_CAN_FIRE_clear = DEF_NOT_rg_adder_busy___d50 && INST_quire_accumulator.METH_RDY_init_put();
  PORT_RDY_clear = DEF_CAN_FIRE_clear;
  return PORT_RDY_clear;
}


/* Reset routines */

void MOD_mkQuire_Adder::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_rg_state.reset_RST(ARG_rst_in);
  INST_rg_adder_busy.reset_RST(ARG_rst_in);
  INST_quire_stage_s_serverPipe_index_k.reset_RST(ARG_rst_in);
  INST_quire_stage_s_fifof_rv.reset_RST(ARG_rst_in);
  INST_quire_accumulator.reset_RST_N(ARG_rst_in);
  INST_normalizer.reset_RST_N(ARG_rst_in);
  INST_fifo_input_quire.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkQuire_Adder::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkQuire_Adder::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_fifo_input_quire.dump_state(indent + 2u);
  INST_i.dump_state(indent + 2u);
  INST_normalizer.dump_state(indent + 2u);
  INST_quire_accumulator.dump_state(indent + 2u);
  INST_quire_stage_s_fifof_rv.dump_state(indent + 2u);
  INST_quire_stage_s_serverPipe_index_k.dump_state(indent + 2u);
  INST_rg_adder_busy.dump_state(indent + 2u);
  INST_rg_final_posit.dump_state(indent + 2u);
  INST_rg_state.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkQuire_Adder::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 21u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_rg_adder_busy___d50", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34", 130u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35", 133u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d13", 267u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_add_put___d49", 267u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "quire_stage_s_fifof_rv_port0__read____d1", 267u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "quire_stage_s_fifof_rv_port1__read____d51", 267u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_adder_busy__h647", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "add_put", 266u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "write_quire", 133u);
  num = INST_fifo_input_quire.dump_VCD_defs(num);
  num = INST_i.dump_VCD_defs(num);
  num = INST_quire_stage_s_fifof_rv.dump_VCD_defs(num);
  num = INST_quire_stage_s_serverPipe_index_k.dump_VCD_defs(num);
  num = INST_rg_adder_busy.dump_VCD_defs(num);
  num = INST_rg_final_posit.dump_VCD_defs(num);
  num = INST_rg_state.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_normalizer.dump_VCD_defs(l);
    num = INST_quire_accumulator.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkQuire_Adder::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkQuire_Adder &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkQuire_Adder::vcd_defs(tVCDDumpType dt, MOD_mkQuire_Adder &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 130u);
    vcd_write_x(sim_hdl, num++, 133u);
    vcd_write_x(sim_hdl, num++, 267u);
    vcd_write_x(sim_hdl, num++, 267u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 267u);
    vcd_write_x(sim_hdl, num++, 267u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 266u);
    vcd_write_x(sim_hdl, num++, 133u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_NOT_rg_adder_busy___d50) != DEF_NOT_rg_adder_busy___d50)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_rg_adder_busy___d50, 1u);
	backing.DEF_NOT_rg_adder_busy___d50 = DEF_NOT_rg_adder_busy___d50;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25) != DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25)
      {
	vcd_write_val(sim_hdl, num, DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25, 128u);
	backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25 = DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25;
      }
      ++num;
      if ((backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34) != DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34)
      {
	vcd_write_val(sim_hdl, num, DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34, 130u);
	backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34 = DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34;
      }
      ++num;
      if ((backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35) != DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35)
      {
	vcd_write_val(sim_hdl, num, DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35, 133u);
	backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35 = DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d13) != DEF__0_CONCAT_DONTCARE___d13)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d13, 267u);
	backing.DEF__0_CONCAT_DONTCARE___d13 = DEF__0_CONCAT_DONTCARE___d13;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_add_put___d49) != DEF__1_CONCAT_add_put___d49)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_add_put___d49, 267u);
	backing.DEF__1_CONCAT_add_put___d49 = DEF__1_CONCAT_add_put___d49;
      }
      ++num;
      if ((backing.DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22) != DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22)
      {
	vcd_write_val(sim_hdl, num, DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22, 128u);
	backing.DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22 = DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22;
      }
      ++num;
      if ((backing.DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23) != DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23)
      {
	vcd_write_val(sim_hdl, num, DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23, 128u);
	backing.DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23 = DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23;
      }
      ++num;
      if ((backing.DEF_quire_stage_s_fifof_rv_port0__read____d1) != DEF_quire_stage_s_fifof_rv_port0__read____d1)
      {
	vcd_write_val(sim_hdl, num, DEF_quire_stage_s_fifof_rv_port0__read____d1, 267u);
	backing.DEF_quire_stage_s_fifof_rv_port0__read____d1 = DEF_quire_stage_s_fifof_rv_port0__read____d1;
      }
      ++num;
      if ((backing.DEF_quire_stage_s_fifof_rv_port1__read____d51) != DEF_quire_stage_s_fifof_rv_port1__read____d51)
      {
	vcd_write_val(sim_hdl, num, DEF_quire_stage_s_fifof_rv_port1__read____d51, 267u);
	backing.DEF_quire_stage_s_fifof_rv_port1__read____d51 = DEF_quire_stage_s_fifof_rv_port1__read____d51;
      }
      ++num;
      if ((backing.DEF_rg_adder_busy__h647) != DEF_rg_adder_busy__h647)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_adder_busy__h647, 1u);
	backing.DEF_rg_adder_busy__h647 = DEF_rg_adder_busy__h647;
      }
      ++num;
      if ((backing.PORT_add_put) != PORT_add_put)
      {
	vcd_write_val(sim_hdl, num, PORT_add_put, 266u);
	backing.PORT_add_put = PORT_add_put;
      }
      ++num;
      if ((backing.PORT_write_quire) != PORT_write_quire)
      {
	vcd_write_val(sim_hdl, num, PORT_write_quire, 133u);
	backing.PORT_write_quire = PORT_write_quire;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_NOT_rg_adder_busy___d50, 1u);
      backing.DEF_NOT_rg_adder_busy___d50 = DEF_NOT_rg_adder_busy___d50;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25, 128u);
      backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25 = DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d25;
      vcd_write_val(sim_hdl, num++, DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34, 130u);
      backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34 = DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d34;
      vcd_write_val(sim_hdl, num++, DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35, 133u);
      backing.DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35 = DEF_SEL_ARR_quire_stage_s_fifof_rv_port0__read_BIT_ETC___d35;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d13, 267u);
      backing.DEF__0_CONCAT_DONTCARE___d13 = DEF__0_CONCAT_DONTCARE___d13;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_add_put___d49, 267u);
      backing.DEF__1_CONCAT_add_put___d49 = DEF__1_CONCAT_add_put___d49;
      vcd_write_val(sim_hdl, num++, DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22, 128u);
      backing.DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22 = DEF_quire_stage_s_fifof_rv_port0__read_BITS_129_TO_2___d22;
      vcd_write_val(sim_hdl, num++, DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23, 128u);
      backing.DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23 = DEF_quire_stage_s_fifof_rv_port0__read_BITS_262_TO_ETC___d23;
      vcd_write_val(sim_hdl, num++, DEF_quire_stage_s_fifof_rv_port0__read____d1, 267u);
      backing.DEF_quire_stage_s_fifof_rv_port0__read____d1 = DEF_quire_stage_s_fifof_rv_port0__read____d1;
      vcd_write_val(sim_hdl, num++, DEF_quire_stage_s_fifof_rv_port1__read____d51, 267u);
      backing.DEF_quire_stage_s_fifof_rv_port1__read____d51 = DEF_quire_stage_s_fifof_rv_port1__read____d51;
      vcd_write_val(sim_hdl, num++, DEF_rg_adder_busy__h647, 1u);
      backing.DEF_rg_adder_busy__h647 = DEF_rg_adder_busy__h647;
      vcd_write_val(sim_hdl, num++, PORT_add_put, 266u);
      backing.PORT_add_put = PORT_add_put;
      vcd_write_val(sim_hdl, num++, PORT_write_quire, 133u);
      backing.PORT_write_quire = PORT_write_quire;
    }
}

void MOD_mkQuire_Adder::vcd_prims(tVCDDumpType dt, MOD_mkQuire_Adder &backing)
{
  INST_fifo_input_quire.dump_VCD(dt, backing.INST_fifo_input_quire);
  INST_i.dump_VCD(dt, backing.INST_i);
  INST_quire_stage_s_fifof_rv.dump_VCD(dt, backing.INST_quire_stage_s_fifof_rv);
  INST_quire_stage_s_serverPipe_index_k.dump_VCD(dt, backing.INST_quire_stage_s_serverPipe_index_k);
  INST_rg_adder_busy.dump_VCD(dt, backing.INST_rg_adder_busy);
  INST_rg_final_posit.dump_VCD(dt, backing.INST_rg_final_posit);
  INST_rg_state.dump_VCD(dt, backing.INST_rg_state);
}

void MOD_mkQuire_Adder::vcd_submodules(tVCDDumpType dt,
				       unsigned int levels,
				       MOD_mkQuire_Adder &backing)
{
  INST_normalizer.dump_VCD(dt, levels, backing.INST_normalizer);
  INST_quire_accumulator.dump_VCD(dt, levels, backing.INST_quire_accumulator);
}
