/*
 * Generated by Bluespec Compiler (build cd96b228)
 * 
 * On Tue Jun 15 18:31:46 IST 2021
 * 
 */
#include "bluesim_primitives.h"
#include "mkMultiplier.h"


/* Literal declarations */
static unsigned int const UWide_literal_112_h0_arr[] = { 0u, 0u, 0u, 0u };
static tUWide const UWide_literal_112_h0(112u, UWide_literal_112_h0_arr);
static unsigned int const UWide_literal_112_hffffffffffffffffffffffffffff_arr[] = { 4294967295u,
										    4294967295u,
										    4294967295u,
										    65535u };
static tUWide const UWide_literal_112_hffffffffffffffffffffffffffff(112u,
								    UWide_literal_112_hffffffffffffffffffffffffffff_arr);
static unsigned int const UWide_literal_127_h0_arr[] = { 0u, 0u, 0u, 0u };
static tUWide const UWide_literal_127_h0(127u, UWide_literal_127_h0_arr);
static unsigned int const UWide_literal_86_h0_arr[] = { 0u, 0u, 0u };
static tUWide const UWide_literal_86_h0(86u, UWide_literal_86_h0_arr);


/* String declarations */
static std::string const __str_literal_2("   int_frac0 %b carry0 %b", 25u);
static std::string const __str_literal_7("   scale0 %b frac0 %b", 21u);
static std::string const __str_literal_6("   sign0 %b", 11u);
static std::string const __str_literal_3("   signed_carry_int_frac %b", 27u);
static std::string const __str_literal_5("   zero-infinity-flag %b", 24u);
static std::string const __str_literal_4("%0d: %m: request: ", 18u);
static std::string const __str_literal_1("%0d: %m: stage_1: ", 18u);


/* Constructor */
MOD_mkMultiplier::MOD_mkMultiplier(tSimStateHdl simHdl,
				   char const *name,
				   Module *parent,
				   tUInt8 ARG_verbosity)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_fifo_output_reg(simHdl, "fifo_output_reg", this, 133u, 1u, (tUInt8)1u, 0u),
    INST_fifo_stage0_reg(simHdl, "fifo_stage0_reg", this, 37u, 1u, (tUInt8)1u, 0u),
    PORT_RST_N((tUInt8)1u),
    PORT_verbosity(ARG_verbosity),
    DEF_v__h1376(2863311530u),
    DEF_v__h780(2863311530u),
    DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41(127u),
    DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40(127u),
    DEF_x__h612(127u),
    DEF_int_frac0__h245(112u),
    DEF_f_new___1__h523(112u),
    DEF_f_new__h470(112u),
    DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54(112u),
    DEF_mask1__h525(112u),
    DEF_x__h687(112u),
    DEF_f_new__h314(112u),
    DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59(133u),
    DEF_signed_carry_int_frac__h250(128u),
    DEF_response_get__avValue1(133u)
{
  PORT_response_get.setSize(133u);
  PORT_response_get.clear();
  symbol_count = 5u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkMultiplier::init_symbols_0()
{
  init_symbol(&symbols[0u], "fifo_output_reg", SYM_MODULE, &INST_fifo_output_reg);
  init_symbol(&symbols[1u], "fifo_stage0_reg", SYM_MODULE, &INST_fifo_stage0_reg);
  init_symbol(&symbols[2u], "RL_stage_1", SYM_RULE);
  init_symbol(&symbols[3u], "response_get", SYM_PORT, &PORT_response_get, 133u);
  init_symbol(&symbols[4u], "verbosity", SYM_PORT, &PORT_verbosity, 2u);
}


/* Rule actions */

void MOD_mkMultiplier::RL_stage_1()
{
  tUInt8 DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d14;
  tUInt32 DEF_v__h774;
  tUInt8 DEF_x__h626;
  tUInt8 DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d17;
  tUInt8 DEF_x__h670;
  tUInt32 DEF_carry0__h247;
  tUInt8 DEF_fifo_stage0_reg_first_BIT_32_AND_NOT_IF_SEXT_f_ETC___d19;
  tUInt8 DEF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26____d10;
  tUInt8 DEF_x__h516;
  tUInt8 DEF_x__h604;
  tUInt8 DEF_fifo_stage0_reg_first_BIT_32___d8;
  tUInt8 DEF_fifo_stage0_reg_first_BIT_33___d7;
  tUInt8 DEF_x__h663;
  tUInt8 DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d44;
  tUInt8 DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d16;
  tUInt32 DEF_x__h483;
  tUInt32 DEF_carry___1__h481;
  tUInt32 DEF_f__h309;
  tUInt64 DEF_fifo_stage0_reg_first____d4;
  DEF_fifo_stage0_reg_first____d4 = INST_fifo_stage0_reg.METH_first();
  DEF_f__h309 = (tUInt32)(67108863u & DEF_fifo_stage0_reg_first____d4);
  DEF_fifo_stage0_reg_first_BIT_33___d7 = (tUInt8)((tUInt8)1u & (DEF_fifo_stage0_reg_first____d4 >> 33u));
  DEF_fifo_stage0_reg_first_BIT_32___d8 = (tUInt8)((tUInt8)1u & (DEF_fifo_stage0_reg_first____d4 >> 32u));
  DEF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26____d10 = primSignExt8(8u,
								     7u,
								     (tUInt8)((tUInt8)((tUInt8)127u & (DEF_fifo_stage0_reg_first____d4 >> 26u))));
  DEF_x__h604 = (tUInt8)255u & (DEF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26____d10 + (tUInt8)32u);
  DEF_NOT_verbosity_ULE_1_0___d61 = !(PORT_verbosity <= (tUInt8)1u);
  DEF_f_new__h314.set_bits_in_word(UWide_literal_86_h0.get_bits_in_word32(2u, 6u, 16u),
				   3u,
				   0u,
				   16u).set_whole_word(primExtract32(32u, 86u, UWide_literal_86_h0, 32u, 69u, 32u, 38u),
						       2u).set_whole_word(primExtract32(32u,
											86u,
											UWide_literal_86_h0,
											32u,
											37u,
											32u,
											6u),
									  1u).set_whole_word((((tUInt32)(UWide_literal_86_h0.get_bits_in_word8(0u,
																	       0u,
																	       6u))) << 26u) | DEF_f__h309,
											     0u);
  wop_primShiftLWide(112u, 112u, DEF_f_new__h314, 8u, (tUInt8)(DEF_x__h604), DEF_f_new__h470);
  DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d14 = (tUInt8)255u & (((tUInt8)(DEF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26____d10 >> 7u) ? (tUInt8)255u & -DEF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26____d10 : DEF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26____d10) - (tUInt8)56u);
  DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d16 = (tUInt8)((tUInt8)127u & ((tUInt8)255u & (DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d14 + (tUInt8)24u)));
  DEF_x__h663 = (tUInt8)127u & (DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d16 - (tUInt8)1u);
  DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d44 = (tUInt8)((tUInt8)31u & DEF_x__h663);
  DEF_x__h516 = (tUInt8)255u & ((tUInt8)24u - DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d14);
  DEF_x__h483 = primShiftR32(26u, 26u, (tUInt32)(DEF_f__h309), 8u, (tUInt8)(DEF_x__h516));
  DEF_carry___1__h481 = (tUInt32)(32767u & DEF_x__h483);
  wop_primShiftRWide(112u,
		     112u,
		     DEF_f_new__h314,
		     7u,
		     (tUInt8)(DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d16),
		     DEF_f_new___1__h523);
  DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d17 = primSLE8(1u,
									  7u,
									  (tUInt8)(DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d16),
									  7u,
									  (tUInt8)0u);
  DEF_fifo_stage0_reg_first_BIT_32_AND_NOT_IF_SEXT_f_ETC___d19 = DEF_fifo_stage0_reg_first_BIT_32___d8 && !DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d17;
  DEF_int_frac0__h245 = DEF_fifo_stage0_reg_first_BIT_32_AND_NOT_IF_SEXT_f_ETC___d19 ? DEF_f_new___1__h523 : DEF_f_new__h470;
  DEF_carry0__h247 = DEF_fifo_stage0_reg_first_BIT_32_AND_NOT_IF_SEXT_f_ETC___d19 || primSLE8(1u,
											      8u,
											      (tUInt8)((tUInt8)255u & (DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d14 + (tUInt8)2u)),
											      8u,
											      (tUInt8)0u) ? 0u : DEF_carry___1__h481;
  DEF_x__h612.set_bits_in_word(2147483647u & ((DEF_carry0__h247 << 16u) | DEF_int_frac0__h245.get_bits_in_word32(3u,
														 0u,
														 16u)),
			       3u,
			       0u,
			       31u).set_whole_word(DEF_int_frac0__h245.get_whole_word(2u),
						   2u).set_whole_word(DEF_int_frac0__h245.get_whole_word(1u),
								      1u).set_whole_word(DEF_int_frac0__h245.get_whole_word(0u),
											 0u);
  wop_sub(UWide_literal_127_h0,
	  DEF_x__h612,
	  DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40);
  DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41 = DEF_fifo_stage0_reg_first_BIT_33___d7 ? DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40 : DEF_x__h612;
  DEF_x__h626 = DEF_fifo_stage0_reg_first_BIT_32_AND_NOT_IF_SEXT_f_ETC___d19 && primExtract8(1u,
											     26u,
											     (tUInt32)(DEF_f__h309),
											     5u,
											     (tUInt8)(DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d44),
											     5u,
											     (tUInt8)(DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d44));
  wop_primShiftRWide(112u,
		     112u,
		     UWide_literal_112_hffffffffffffffffffffffffffff,
		     7u,
		     (tUInt8)(DEF_x__h663),
		     DEF_x__h687);
  wop_inv(DEF_x__h687, DEF_mask1__h525);
  wop_and(DEF_f_new__h314,
	  DEF_mask1__h525,
	  DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54);
  DEF_x__h670 = (!DEF_fifo_stage0_reg_first_BIT_32___d8 || DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d17) || (primSLE8(1u,
																      7u,
																      (tUInt8)(DEF_IF_SEXT_fifo_stage0_reg_first_BITS_32_TO_26__0_ETC___d16),
																      7u,
																      (tUInt8)1u) || DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54 == UWide_literal_112_h0);
  DEF_signed_carry_int_frac__h250.set_whole_word((((tUInt32)(DEF_fifo_stage0_reg_first_BIT_33___d7)) << 31u) | DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41.get_bits_in_word32(3u,
																							       0u,
																							       31u),
						 3u).set_whole_word(DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41.get_whole_word(2u),
								    2u).set_whole_word(DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41.get_whole_word(1u),
										       1u).set_whole_word(DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41.get_whole_word(0u),
													  0u);
  DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59.set_bits_in_word((tUInt8)31u & (((((tUInt8)((tUInt8)3u & (DEF_fifo_stage0_reg_first____d4 >> 34u))) << 3u) | (((tUInt8)(DEF_fifo_stage0_reg_first____d4 >> 36u)) << 2u)) | DEF_signed_carry_int_frac__h250.get_bits_in_word8(3u,
																																			    30u,
																																			    2u)),
										4u,
										0u,
										5u).set_whole_word(primExtract32(32u,
														 128u,
														 DEF_signed_carry_int_frac__h250,
														 32u,
														 125u,
														 32u,
														 94u),
												   3u).set_whole_word(primExtract32(32u,
																    128u,
																    DEF_signed_carry_int_frac__h250,
																    32u,
																    93u,
																    32u,
																    62u),
														      2u).set_whole_word(primExtract32(32u,
																		       128u,
																		       DEF_signed_carry_int_frac__h250,
																		       32u,
																		       61u,
																		       32u,
																		       30u),
																	 1u).set_whole_word(((DEF_signed_carry_int_frac__h250.get_bits_in_word32(0u,
																										 0u,
																										 30u) << 2u) | (((tUInt32)(DEF_x__h626)) << 1u)) | (tUInt32)(DEF_x__h670),
																			    0u);
  INST_fifo_stage0_reg.METH_deq();
  INST_fifo_output_reg.METH_enq(DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      DEF_v__h780 = dollar_stime(sim_hdl);
    else
      DEF_v__h780 = 2863311530u;
  DEF_v__h774 = DEF_v__h780 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_1, DEF_v__h774);
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      dollar_display(sim_hdl,
		     this,
		     "s,112p,15",
		     &__str_literal_2,
		     &DEF_int_frac0__h245,
		     DEF_carry0__h247);
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      dollar_display(sim_hdl, this, "s,128p", &__str_literal_3, &DEF_signed_carry_int_frac__h250);
  }
}


/* Methods */

void MOD_mkMultiplier::METH_request_put(tUInt64 ARG_request_put)
{
  tUInt32 DEF_f2__h999;
  tUInt32 DEF_f1__h998;
  tUInt64 DEF_request_put_BITS_41_TO_40_4_EQ_1_5_AND_request_ETC___d100;
  tUInt8 DEF_x__h1013;
  tUInt8 DEF_sign0__h886;
  tUInt8 DEF_x__h1015;
  tUInt32 DEF_v__h1370;
  tUInt8 DEF_request_put_BITS_20_TO_19_6_EQ_1___d69;
  tUInt8 DEF_request_put_BITS_41_TO_40_4_EQ_1___d65;
  tUInt8 DEF_request_put_BITS_20_TO_19_6_EQ_2___d67;
  tUInt8 DEF_request_put_BITS_41_TO_40_4_EQ_2___d72;
  tUInt8 DEF_IF_request_put_BITS_41_TO_40_4_EQ_2_2_AND_requ_ETC___d76;
  tUInt8 DEF_sgn2__h997;
  tUInt8 DEF_sgn1__h996;
  tUInt8 DEF_y__h1014;
  tUInt8 DEF_IF_request_put_BITS_41_TO_40_4_EQ_2_2_THEN_0b1_ETC___d81;
  tUInt8 DEF_y__h1016;
  tUInt8 DEF_request_put_BITS_20_TO_19___d66;
  tUInt8 DEF_request_put_BITS_41_TO_40___d64;
  tUInt32 DEF_extracted_posits_snd_frac__h947;
  tUInt32 DEF_extracted_posits_fst_frac__h930;
  tUInt32 DEF_frac0__h887;
  tUInt8 DEF_SEXT_request_put_BITS_38_TO_33_6_7_PLUS_SEXT_r_ETC___d90;
  tUInt8 DEF_signed_SEXT_request_put_BITS_38_TO_33_6_7_PLU_ETC___d103;
  DEF_SEXT_request_put_BITS_38_TO_33_6_7_PLUS_SEXT_r_ETC___d90 = (tUInt8)127u & (primSignExt8(7u,
											      6u,
											      (tUInt8)((tUInt8)((tUInt8)63u & (ARG_request_put >> 33u)))) + primSignExt8(7u,
																					 6u,
																					 (tUInt8)((tUInt8)((tUInt8)63u & (ARG_request_put >> 12u)))));
  DEF_signed_SEXT_request_put_BITS_38_TO_33_6_7_PLU_ETC___d103 = DEF_SEXT_request_put_BITS_38_TO_33_6_7_PLUS_SEXT_r_ETC___d90;
  DEF_extracted_posits_fst_frac__h930 = (tUInt32)(4095u & (ARG_request_put >> 21u));
  DEF_request_put_BITS_41_TO_40___d64 = (tUInt8)(ARG_request_put >> 40u);
  DEF_extracted_posits_snd_frac__h947 = (tUInt32)(4095u & ARG_request_put);
  DEF_request_put_BITS_20_TO_19___d66 = (tUInt8)((tUInt8)3u & (ARG_request_put >> 19u));
  DEF_sgn1__h996 = (tUInt8)((tUInt8)1u & (ARG_request_put >> 39u));
  DEF_sgn2__h997 = (tUInt8)((tUInt8)1u & (ARG_request_put >> 18u));
  DEF_request_put_BITS_41_TO_40_4_EQ_2___d72 = DEF_request_put_BITS_41_TO_40___d64 == (tUInt8)2u;
  DEF_request_put_BITS_20_TO_19_6_EQ_2___d67 = DEF_request_put_BITS_20_TO_19___d66 == (tUInt8)2u;
  DEF_IF_request_put_BITS_41_TO_40_4_EQ_2_2_THEN_0b1_ETC___d81 = DEF_request_put_BITS_41_TO_40_4_EQ_2___d72 ? (tUInt8)1u : (DEF_request_put_BITS_20_TO_19_6_EQ_2___d67 ? DEF_request_put_BITS_20_TO_19___d66 : (tUInt8)3u);
  DEF_y__h1016 = (tUInt8)(DEF_IF_request_put_BITS_41_TO_40_4_EQ_2_2_THEN_0b1_ETC___d81 >> 1u);
  DEF_y__h1014 = (tUInt8)((tUInt8)1u & DEF_IF_request_put_BITS_41_TO_40_4_EQ_2_2_THEN_0b1_ETC___d81);
  DEF_request_put_BITS_41_TO_40_4_EQ_1___d65 = DEF_request_put_BITS_41_TO_40___d64 == (tUInt8)1u;
  DEF_request_put_BITS_20_TO_19_6_EQ_1___d69 = DEF_request_put_BITS_20_TO_19___d66 == (tUInt8)1u;
  DEF_IF_request_put_BITS_41_TO_40_4_EQ_2_2_AND_requ_ETC___d76 = DEF_request_put_BITS_41_TO_40_4_EQ_2___d72 && DEF_request_put_BITS_20_TO_19_6_EQ_2___d67 ? (tUInt8)2u : (DEF_request_put_BITS_41_TO_40_4_EQ_1___d65 || DEF_request_put_BITS_20_TO_19_6_EQ_1___d69 ? (tUInt8)1u : (tUInt8)0u);
  DEF_x__h1015 = DEF_sgn1__h996 ^ DEF_sgn2__h997;
  DEF_NOT_verbosity_ULE_1_0___d61 = !(PORT_verbosity <= (tUInt8)1u);
  DEF_x__h1013 = DEF_x__h1015 & DEF_y__h1016;
  DEF_sign0__h886 = DEF_x__h1013 & DEF_y__h1014;
  DEF_f1__h998 = 8191u & ((((tUInt32)(DEF_y__h1016)) << 12u) | DEF_extracted_posits_fst_frac__h930);
  DEF_f2__h999 = 8191u & ((((tUInt32)(DEF_y__h1014)) << 12u) | DEF_extracted_posits_snd_frac__h947);
  DEF_frac0__h887 = (tUInt32)(67108863u & (4503599627370495llu & (((tUInt64)(67108863u & DEF_f1__h998)) * ((tUInt64)(67108863u & DEF_f2__h999)))));
  DEF_request_put_BITS_41_TO_40_4_EQ_1_5_AND_request_ETC___d100 = 137438953471llu & (((((((tUInt64)((DEF_request_put_BITS_41_TO_40_4_EQ_1___d65 && DEF_request_put_BITS_20_TO_19_6_EQ_2___d67) || (DEF_request_put_BITS_20_TO_19_6_EQ_1___d69 && DEF_request_put_BITS_41_TO_40_4_EQ_1___d65))) << 36u) | (((tUInt64)(DEF_IF_request_put_BITS_41_TO_40_4_EQ_2_2_AND_requ_ETC___d76)) << 34u)) | (((tUInt64)(DEF_sign0__h886)) << 33u)) | (((tUInt64)(DEF_SEXT_request_put_BITS_38_TO_33_6_7_PLUS_SEXT_r_ETC___d90)) << 26u)) | (tUInt64)(DEF_frac0__h887));
  INST_fifo_stage0_reg.METH_enq(DEF_request_put_BITS_41_TO_40_4_EQ_1_5_AND_request_ETC___d100);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      DEF_v__h1376 = dollar_stime(sim_hdl);
    else
      DEF_v__h1376 = 2863311530u;
  DEF_v__h1370 = DEF_v__h1376 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_4, DEF_v__h1370);
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      dollar_display(sim_hdl,
		     this,
		     "s,2",
		     &__str_literal_5,
		     DEF_IF_request_put_BITS_41_TO_40_4_EQ_2_2_AND_requ_ETC___d76);
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      dollar_display(sim_hdl, this, "s,1", &__str_literal_6, DEF_sign0__h886);
    if (DEF_NOT_verbosity_ULE_1_0___d61)
      dollar_display(sim_hdl,
		     this,
		     "s,-7,26",
		     &__str_literal_7,
		     DEF_signed_SEXT_request_put_BITS_38_TO_33_6_7_PLU_ETC___d103,
		     DEF_frac0__h887);
  }
}

tUInt8 MOD_mkMultiplier::METH_RDY_request_put()
{
  tUInt8 DEF_CAN_FIRE_request_put;
  tUInt8 PORT_RDY_request_put;
  DEF_CAN_FIRE_request_put = INST_fifo_stage0_reg.METH_i_notFull();
  PORT_RDY_request_put = DEF_CAN_FIRE_request_put;
  return PORT_RDY_request_put;
}

tUWide MOD_mkMultiplier::METH_response_get()
{
  DEF_response_get__avValue1 = INST_fifo_output_reg.METH_first();
  PORT_response_get = DEF_response_get__avValue1;
  INST_fifo_output_reg.METH_deq();
  return PORT_response_get;
}

tUInt8 MOD_mkMultiplier::METH_RDY_response_get()
{
  tUInt8 DEF_CAN_FIRE_response_get;
  tUInt8 PORT_RDY_response_get;
  DEF_CAN_FIRE_response_get = INST_fifo_output_reg.METH_i_notEmpty();
  PORT_RDY_response_get = DEF_CAN_FIRE_response_get;
  return PORT_RDY_response_get;
}


/* Reset routines */

void MOD_mkMultiplier::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_fifo_stage0_reg.reset_RST(ARG_rst_in);
  INST_fifo_output_reg.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkMultiplier::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkMultiplier::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_fifo_output_reg.dump_state(indent + 2u);
  INST_fifo_stage0_reg.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkMultiplier::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 20u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41", 127u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_verbosity_ULE_1_0___d61", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54", 112u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40", 127u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "f_new___1__h523", 112u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "f_new__h314", 112u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "f_new__h470", 112u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59", 133u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "int_frac0__h245", 112u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mask1__h525", 112u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "response_get__avValue1", 133u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "signed_carry_int_frac__h250", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h1376", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h780", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h612", 127u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h687", 112u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "response_get", 133u);
  num = INST_fifo_output_reg.dump_VCD_defs(num);
  num = INST_fifo_stage0_reg.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkMultiplier::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkMultiplier &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkMultiplier::vcd_defs(tVCDDumpType dt, MOD_mkMultiplier &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 127u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 112u);
    vcd_write_x(sim_hdl, num++, 127u);
    vcd_write_x(sim_hdl, num++, 112u);
    vcd_write_x(sim_hdl, num++, 112u);
    vcd_write_x(sim_hdl, num++, 112u);
    vcd_write_x(sim_hdl, num++, 133u);
    vcd_write_x(sim_hdl, num++, 112u);
    vcd_write_x(sim_hdl, num++, 112u);
    vcd_write_x(sim_hdl, num++, 133u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 127u);
    vcd_write_x(sim_hdl, num++, 112u);
    vcd_write_x(sim_hdl, num++, 133u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41) != DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41, 127u);
	backing.DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41 = DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41;
      }
      ++num;
      if ((backing.DEF_NOT_verbosity_ULE_1_0___d61) != DEF_NOT_verbosity_ULE_1_0___d61)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_verbosity_ULE_1_0___d61, 1u);
	backing.DEF_NOT_verbosity_ULE_1_0___d61 = DEF_NOT_verbosity_ULE_1_0___d61;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54) != DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54, 112u);
	backing.DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54 = DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54;
      }
      ++num;
      if ((backing.DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40) != DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40)
      {
	vcd_write_val(sim_hdl, num, DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40, 127u);
	backing.DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40 = DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40;
      }
      ++num;
      if ((backing.DEF_f_new___1__h523) != DEF_f_new___1__h523)
      {
	vcd_write_val(sim_hdl, num, DEF_f_new___1__h523, 112u);
	backing.DEF_f_new___1__h523 = DEF_f_new___1__h523;
      }
      ++num;
      if ((backing.DEF_f_new__h314) != DEF_f_new__h314)
      {
	vcd_write_val(sim_hdl, num, DEF_f_new__h314, 112u);
	backing.DEF_f_new__h314 = DEF_f_new__h314;
      }
      ++num;
      if ((backing.DEF_f_new__h470) != DEF_f_new__h470)
      {
	vcd_write_val(sim_hdl, num, DEF_f_new__h470, 112u);
	backing.DEF_f_new__h470 = DEF_f_new__h470;
      }
      ++num;
      if ((backing.DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59) != DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59)
      {
	vcd_write_val(sim_hdl, num, DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59, 133u);
	backing.DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59 = DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59;
      }
      ++num;
      if ((backing.DEF_int_frac0__h245) != DEF_int_frac0__h245)
      {
	vcd_write_val(sim_hdl, num, DEF_int_frac0__h245, 112u);
	backing.DEF_int_frac0__h245 = DEF_int_frac0__h245;
      }
      ++num;
      if ((backing.DEF_mask1__h525) != DEF_mask1__h525)
      {
	vcd_write_val(sim_hdl, num, DEF_mask1__h525, 112u);
	backing.DEF_mask1__h525 = DEF_mask1__h525;
      }
      ++num;
      if ((backing.DEF_response_get__avValue1) != DEF_response_get__avValue1)
      {
	vcd_write_val(sim_hdl, num, DEF_response_get__avValue1, 133u);
	backing.DEF_response_get__avValue1 = DEF_response_get__avValue1;
      }
      ++num;
      if ((backing.DEF_signed_carry_int_frac__h250) != DEF_signed_carry_int_frac__h250)
      {
	vcd_write_val(sim_hdl, num, DEF_signed_carry_int_frac__h250, 128u);
	backing.DEF_signed_carry_int_frac__h250 = DEF_signed_carry_int_frac__h250;
      }
      ++num;
      if ((backing.DEF_v__h1376) != DEF_v__h1376)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h1376, 32u);
	backing.DEF_v__h1376 = DEF_v__h1376;
      }
      ++num;
      if ((backing.DEF_v__h780) != DEF_v__h780)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h780, 32u);
	backing.DEF_v__h780 = DEF_v__h780;
      }
      ++num;
      if ((backing.DEF_x__h612) != DEF_x__h612)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h612, 127u);
	backing.DEF_x__h612 = DEF_x__h612;
      }
      ++num;
      if ((backing.DEF_x__h687) != DEF_x__h687)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h687, 112u);
	backing.DEF_x__h687 = DEF_x__h687;
      }
      ++num;
      if ((backing.PORT_response_get) != PORT_response_get)
      {
	vcd_write_val(sim_hdl, num, PORT_response_get, 133u);
	backing.PORT_response_get = PORT_response_get;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41, 127u);
      backing.DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41 = DEF_IF_fifo_stage0_reg_first_BIT_33_THEN_0_MINUS_I_ETC___d41;
      vcd_write_val(sim_hdl, num++, DEF_NOT_verbosity_ULE_1_0___d61, 1u);
      backing.DEF_NOT_verbosity_ULE_1_0___d61 = DEF_NOT_verbosity_ULE_1_0___d61;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54, 112u);
      backing.DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54 = DEF__0_CONCAT_fifo_stage0_reg_first_BITS_25_TO_0_3__ETC___d54;
      vcd_write_val(sim_hdl, num++, DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40, 127u);
      backing.DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40 = DEF__0_MINUS_IF_fifo_stage0_reg_first_BIT_32_AND_NO_ETC___d40;
      vcd_write_val(sim_hdl, num++, DEF_f_new___1__h523, 112u);
      backing.DEF_f_new___1__h523 = DEF_f_new___1__h523;
      vcd_write_val(sim_hdl, num++, DEF_f_new__h314, 112u);
      backing.DEF_f_new__h314 = DEF_f_new__h314;
      vcd_write_val(sim_hdl, num++, DEF_f_new__h470, 112u);
      backing.DEF_f_new__h470 = DEF_f_new__h470;
      vcd_write_val(sim_hdl, num++, DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59, 133u);
      backing.DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59 = DEF_fifo_stage0_reg_first_BITS_35_TO_34_CONCAT_fif_ETC___d59;
      vcd_write_val(sim_hdl, num++, DEF_int_frac0__h245, 112u);
      backing.DEF_int_frac0__h245 = DEF_int_frac0__h245;
      vcd_write_val(sim_hdl, num++, DEF_mask1__h525, 112u);
      backing.DEF_mask1__h525 = DEF_mask1__h525;
      vcd_write_val(sim_hdl, num++, DEF_response_get__avValue1, 133u);
      backing.DEF_response_get__avValue1 = DEF_response_get__avValue1;
      vcd_write_val(sim_hdl, num++, DEF_signed_carry_int_frac__h250, 128u);
      backing.DEF_signed_carry_int_frac__h250 = DEF_signed_carry_int_frac__h250;
      vcd_write_val(sim_hdl, num++, DEF_v__h1376, 32u);
      backing.DEF_v__h1376 = DEF_v__h1376;
      vcd_write_val(sim_hdl, num++, DEF_v__h780, 32u);
      backing.DEF_v__h780 = DEF_v__h780;
      vcd_write_val(sim_hdl, num++, DEF_x__h612, 127u);
      backing.DEF_x__h612 = DEF_x__h612;
      vcd_write_val(sim_hdl, num++, DEF_x__h687, 112u);
      backing.DEF_x__h687 = DEF_x__h687;
      vcd_write_val(sim_hdl, num++, PORT_response_get, 133u);
      backing.PORT_response_get = PORT_response_get;
    }
}

void MOD_mkMultiplier::vcd_prims(tVCDDumpType dt, MOD_mkMultiplier &backing)
{
  INST_fifo_output_reg.dump_VCD(dt, backing.INST_fifo_output_reg);
  INST_fifo_stage0_reg.dump_VCD(dt, backing.INST_fifo_stage0_reg);
}
