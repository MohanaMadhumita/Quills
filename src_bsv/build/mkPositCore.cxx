/*
 * Generated by Bluespec Compiler (build cd96b228)
 * 
 * On Tue Jun 15 18:31:46 IST 2021
 * 
 */
#include "bluesim_primitives.h"
#include "mkPositCore.h"


/* Literal declarations */
static unsigned int const UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
										     2863311530u,
										     2863311530u,
										     699050u };
static tUWide const UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa(117u,
								     UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa_arr);
static unsigned int const UWide_literal_101_haaaaaaaaaaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
										 2863311530u,
										 2863311530u,
										 10u };
static tUWide const UWide_literal_101_haaaaaaaaaaaaaaaaaaaaaaaaa(101u,
								 UWide_literal_101_haaaaaaaaaaaaaaaaaaaaaaaaa_arr);
static unsigned int const UWide_literal_133_haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
											 2863311530u,
											 2863311530u,
											 2863311530u,
											 10u };
static tUWide const UWide_literal_133_haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa(133u,
									 UWide_literal_133_haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa_arr);


/* Constructor */
MOD_mkPositCore::MOD_mkPositCore(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cmd_stg2_f(simHdl, "cmd_stg2_f", this, 4u, 4u, (tUInt8)1u, 0u),
    INST_cmd_stg3_f(simHdl, "cmd_stg3_f", this, 4u, 4u, (tUInt8)1u, 0u),
    INST_divider(simHdl, "divider", this, (tUInt8)1u),
    INST_extracter1(simHdl, "extracter1", this, (tUInt8)1u),
    INST_extracter2(simHdl, "extracter2", this, (tUInt8)1u),
    INST_ffI(simHdl, "ffI", this, 277u, 4u, (tUInt8)1u, 0u),
    INST_ffO(simHdl, "ffO", this, 140u, 4u, (tUInt8)1u, 0u),
    INST_ftop(simHdl, "ftop", this, (tUInt8)1u),
    INST_multiplier(simHdl, "multiplier", this, (tUInt8)1u),
    INST_normalizer(simHdl, "normalizer", this, (tUInt8)1u),
    INST_ops_in_flight(simHdl, "ops_in_flight", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_ptof(simHdl, "ptof", this, (tUInt8)1u),
    INST_quire(simHdl, "quire", this, (tUInt8)1u),
    PORT_RST_N((tUInt8)1u),
    DEF_ffI_first____d8(277u),
    DEF_divider_response_get___d127(133u),
    DEF_multiplier_response_get___d118(133u),
    DEF_ffO_first____d161(140u),
    DEF_quire_read_quire____d52(133u),
    DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53(140u),
    DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158(140u),
    DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149(133u),
    DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142(140u),
    DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135(133u)
{
  PORT_server_core_request_put.setSize(277u);
  PORT_server_core_request_put.clear();
  PORT_server_core_response_get.setSize(140u);
  PORT_server_core_response_get.clear();
  symbol_count = 31u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkPositCore::init_symbols_0()
{
  init_symbol(&symbols[0u], "cmd_stg2_f", SYM_MODULE, &INST_cmd_stg2_f);
  init_symbol(&symbols[1u], "cmd_stg3_f", SYM_MODULE, &INST_cmd_stg3_f);
  init_symbol(&symbols[2u], "divider", SYM_MODULE, &INST_divider);
  init_symbol(&symbols[3u], "extracter1", SYM_MODULE, &INST_extracter1);
  init_symbol(&symbols[4u], "extracter2", SYM_MODULE, &INST_extracter2);
  init_symbol(&symbols[5u], "ffI", SYM_MODULE, &INST_ffI);
  init_symbol(&symbols[6u], "ffO", SYM_MODULE, &INST_ffO);
  init_symbol(&symbols[7u], "ftop", SYM_MODULE, &INST_ftop);
  init_symbol(&symbols[8u], "multiplier", SYM_MODULE, &INST_multiplier);
  init_symbol(&symbols[9u], "normalizer", SYM_MODULE, &INST_normalizer);
  init_symbol(&symbols[10u], "ops_in_flight", SYM_MODULE, &INST_ops_in_flight);
  init_symbol(&symbols[11u], "ptof", SYM_MODULE, &INST_ptof);
  init_symbol(&symbols[12u], "quire", SYM_MODULE, &INST_quire);
  init_symbol(&symbols[13u], "RL_extract_stg1", SYM_RULE);
  init_symbol(&symbols[14u], "RL_rl_fda_stg2", SYM_RULE);
  init_symbol(&symbols[15u], "RL_rl_fda_stg3", SYM_RULE);
  init_symbol(&symbols[16u], "RL_rl_float_to_posit_stg1", SYM_RULE);
  init_symbol(&symbols[17u], "RL_rl_float_to_posit_stg2", SYM_RULE);
  init_symbol(&symbols[18u], "RL_rl_float_to_posit_stg3", SYM_RULE);
  init_symbol(&symbols[19u], "RL_rl_fma_stg2", SYM_RULE);
  init_symbol(&symbols[20u], "RL_rl_fma_stg3", SYM_RULE);
  init_symbol(&symbols[21u], "RL_rl_init_quire_stg2", SYM_RULE);
  init_symbol(&symbols[22u], "RL_rl_posit_to_float_stg2", SYM_RULE);
  init_symbol(&symbols[23u], "RL_rl_posit_to_float_stg3", SYM_RULE);
  init_symbol(&symbols[24u], "RL_rl_read_quire", SYM_RULE);
  init_symbol(&symbols[25u], "RL_rl_read_quire_stg1", SYM_RULE);
  init_symbol(&symbols[26u], "RL_rl_read_quire_stg2", SYM_RULE);
  init_symbol(&symbols[27u], "RL_rl_read_quire_stg3", SYM_RULE);
  init_symbol(&symbols[28u], "RL_rl_reset_quire", SYM_RULE);
  init_symbol(&symbols[29u],
	      "server_core_request_put",
	      SYM_PORT,
	      &PORT_server_core_request_put,
	      277u);
  init_symbol(&symbols[30u],
	      "server_core_response_get",
	      SYM_PORT,
	      &PORT_server_core_response_get,
	      140u);
}


/* Rule actions */

void MOD_mkPositCore::RL_extract_stg1()
{
  tUInt8 DEF_x1__h1367;
  tUInt32 DEF_put__h1120;
  tUInt32 DEF_x__h1226;
  tUInt32 DEF__0_MINUS_IF_ffI_first_BITS_141_TO_140_9_EQ_2_0__ETC___d33;
  tUInt32 DEF_put__h1206;
  tUInt8 DEF_x__h1388;
  DEF_ffI_first____d8 = INST_ffI.METH_first();
  DEF_x__h1388 = INST_ops_in_flight.METH_port0__read();
  DEF_ffI_first_BITS_3_TO_0___d9 = DEF_ffI_first____d8.get_bits_in_word8(0u, 0u, 4u);
  DEF_x__h1226 = DEF_ffI_first____d8.get_bits_in_word32(0u, 7u, 16u);
  DEF__0_MINUS_IF_ffI_first_BITS_141_TO_140_9_EQ_2_0__ETC___d33 = 65535u & (0u - DEF_x__h1226);
  switch (DEF_ffI_first_BITS_3_TO_0___d9) {
  case (tUInt8)1u:
  case (tUInt8)3u:
    DEF_put__h1206 = DEF__0_MINUS_IF_ffI_first_BITS_141_TO_140_9_EQ_2_0__ETC___d33;
    break;
  default:
    DEF_put__h1206 = DEF_x__h1226;
  }
  DEF_put__h1120 = DEF_ffI_first____d8.get_bits_in_word32(4u, 14u, 16u);
  DEF_x1__h1367 = (tUInt8)7u & (DEF_x__h1388 + (tUInt8)1u);
  INST_extracter1.METH_request_put(DEF_put__h1120);
  INST_extracter2.METH_request_put(DEF_put__h1206);
  INST_cmd_stg2_f.METH_enq(DEF_ffI_first_BITS_3_TO_0___d9);
  INST_ffI.METH_deq();
  INST_ops_in_flight.METH_port0__write(DEF_x1__h1367);
}

void MOD_mkPositCore::RL_rl_float_to_posit_stg1()
{
  tUInt32 DEF_f__h1427;
  DEF_ffI_first____d8 = INST_ffI.METH_first();
  DEF_f__h1427 = primExtract32(32u, 277u, DEF_ffI_first____d8, 32u, 173u, 32u, 142u);
  DEF_ffI_first_BITS_3_TO_0___d9 = DEF_ffI_first____d8.get_bits_in_word8(0u, 0u, 4u);
  INST_ftop.METH_request_put(DEF_f__h1427);
  INST_cmd_stg2_f.METH_enq(DEF_ffI_first_BITS_3_TO_0___d9);
  INST_ffI.METH_deq();
}

void MOD_mkPositCore::RL_rl_read_quire_stg1()
{
  DEF_ffI_first____d8 = INST_ffI.METH_first();
  DEF_ffI_first_BITS_3_TO_0___d9 = DEF_ffI_first____d8.get_bits_in_word8(0u, 0u, 4u);
  INST_quire.METH_read_req();
  INST_cmd_stg2_f.METH_enq(DEF_ffI_first_BITS_3_TO_0___d9);
  INST_ffI.METH_deq();
}

void MOD_mkPositCore::RL_rl_read_quire()
{
  DEF_quire_read_quire____d52 = INST_quire.METH_read_quire();
  DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53.set_bits_in_word(4095u & ((((tUInt32)((tUInt8)3u)) << 10u) | primExtract32(10u,
															      133u,
															      DEF_quire_read_quire____d52,
															      32u,
															      132u,
															      32u,
															      123u)),
								    4u,
								    0u,
								    12u).set_whole_word(primExtract32(32u,
												      133u,
												      DEF_quire_read_quire____d52,
												      32u,
												      122u,
												      32u,
												      91u),
											3u).set_whole_word(primExtract32(32u,
															 133u,
															 DEF_quire_read_quire____d52,
															 32u,
															 90u,
															 32u,
															 59u),
													   2u).set_whole_word(primExtract32(32u,
																	    133u,
																	    DEF_quire_read_quire____d52,
																	    32u,
																	    58u,
																	    32u,
																	    27u),
															      1u).set_whole_word((DEF_quire_read_quire____d52.get_bits_in_word32(0u,
																								 0u,
																								 27u) << 5u) | (tUInt32)((tUInt8)0u),
																		 0u);
  INST_ffO.METH_enq(DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53);
  INST_ffI.METH_deq();
}

void MOD_mkPositCore::RL_rl_reset_quire()
{
  tUInt32 DEF__2_CONCAT_DONTCARE___d58;
  DEF__2_CONCAT_DONTCARE___d58 = 1223338u;
  INST_quire.METH_init_put(DEF__2_CONCAT_DONTCARE___d58);
  INST_ffI.METH_deq();
}

void MOD_mkPositCore::RL_rl_fma_stg2()
{
  tUInt32 DEF_AVMeth_extracter1_response_get;
  tUInt32 DEF_AVMeth_extracter2_response_get;
  DEF_cmd_stg2_f_first____d68 = INST_cmd_stg2_f.METH_first();
  DEF_AVMeth_extracter1_response_get = INST_extracter1.METH_response_get();
  DEF_extracter1_response_get___d73 = DEF_AVMeth_extracter1_response_get;
  DEF_AVMeth_extracter2_response_get = INST_extracter2.METH_response_get();
  DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75 = 4398046511103llu & ((((tUInt64)(DEF_extracter1_response_get___d73)) << 21u) | (tUInt64)(DEF_AVMeth_extracter2_response_get));
  INST_multiplier.METH_request_put(DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75);
  INST_cmd_stg3_f.METH_enq(DEF_cmd_stg2_f_first____d68);
  INST_cmd_stg2_f.METH_deq();
}

void MOD_mkPositCore::RL_rl_fda_stg2()
{
  tUInt32 DEF_AVMeth_extracter1_response_get;
  tUInt32 DEF_AVMeth_extracter2_response_get;
  DEF_cmd_stg2_f_first____d68 = INST_cmd_stg2_f.METH_first();
  DEF_AVMeth_extracter1_response_get = INST_extracter1.METH_response_get();
  DEF_extracter1_response_get___d73 = DEF_AVMeth_extracter1_response_get;
  DEF_AVMeth_extracter2_response_get = INST_extracter2.METH_response_get();
  DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75 = 4398046511103llu & ((((tUInt64)(DEF_extracter1_response_get___d73)) << 21u) | (tUInt64)(DEF_AVMeth_extracter2_response_get));
  INST_divider.METH_request_put(DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75);
  INST_cmd_stg3_f.METH_enq(DEF_cmd_stg2_f_first____d68);
  INST_cmd_stg2_f.METH_deq();
}

void MOD_mkPositCore::RL_rl_posit_to_float_stg2()
{
  tUInt32 DEF_AVMeth_extracter1_response_get;
  DEF_cmd_stg2_f_first____d68 = INST_cmd_stg2_f.METH_first();
  DEF_AVMeth_extracter1_response_get = INST_extracter1.METH_response_get();
  DEF_extracter1_response_get___d73 = DEF_AVMeth_extracter1_response_get;
  INST_extracter2.METH_response_get();
  INST_ptof.METH_request_put(DEF_extracter1_response_get___d73);
  INST_cmd_stg3_f.METH_enq(DEF_cmd_stg2_f_first____d68);
  INST_cmd_stg2_f.METH_deq();
}

void MOD_mkPositCore::RL_rl_float_to_posit_stg2()
{
  tUInt32 DEF_ftop_response_get___d96;
  tUInt32 DEF_AVMeth_ftop_response_get;
  DEF_cmd_stg2_f_first____d68 = INST_cmd_stg2_f.METH_first();
  DEF_AVMeth_ftop_response_get = INST_ftop.METH_response_get();
  DEF_ftop_response_get___d96 = DEF_AVMeth_ftop_response_get;
  INST_normalizer.METH_request_put(DEF_ftop_response_get___d96);
  INST_cmd_stg3_f.METH_enq(DEF_cmd_stg2_f_first____d68);
  INST_cmd_stg2_f.METH_deq();
}

void MOD_mkPositCore::RL_rl_init_quire_stg2()
{
  tUInt32 DEF_AVMeth_extracter1_response_get;
  DEF_AVMeth_extracter1_response_get = INST_extracter1.METH_response_get();
  DEF_extracter1_response_get___d73 = DEF_AVMeth_extracter1_response_get;
  INST_extracter2.METH_response_get();
  INST_quire.METH_init_put(DEF_extracter1_response_get___d73);
  INST_cmd_stg2_f.METH_deq();
}

void MOD_mkPositCore::RL_rl_read_quire_stg2()
{
  tUInt32 DEF_quire_read_rsp_get___d107;
  tUInt32 DEF_AVMeth_quire_read_rsp_get;
  DEF_cmd_stg2_f_first____d68 = INST_cmd_stg2_f.METH_first();
  DEF_AVMeth_quire_read_rsp_get = INST_quire.METH_read_rsp_get();
  DEF_quire_read_rsp_get___d107 = DEF_AVMeth_quire_read_rsp_get;
  INST_normalizer.METH_request_put(DEF_quire_read_rsp_get___d107);
  INST_cmd_stg3_f.METH_enq(DEF_cmd_stg2_f_first____d68);
  INST_cmd_stg2_f.METH_deq();
}

void MOD_mkPositCore::RL_rl_fma_stg3()
{
  tUWide DEF_AVMeth_multiplier_response_get(133u, false);
  DEF_x__h3117 = INST_ops_in_flight.METH_port1__read();
  DEF_x1__h3111 = (tUInt8)7u & (DEF_x__h3117 - (tUInt8)1u);
  DEF_AVMeth_multiplier_response_get = INST_multiplier.METH_response_get();
  DEF_multiplier_response_get___d118 = DEF_AVMeth_multiplier_response_get;
  INST_quire.METH_accumulate_put(DEF_multiplier_response_get___d118);
  INST_cmd_stg3_f.METH_deq();
  INST_ops_in_flight.METH_port1__write(DEF_x1__h3111);
}

void MOD_mkPositCore::RL_rl_fda_stg3()
{
  tUWide DEF_AVMeth_divider_response_get(133u, false);
  DEF_x__h3117 = INST_ops_in_flight.METH_port1__read();
  DEF_x1__h3111 = (tUInt8)7u & (DEF_x__h3117 - (tUInt8)1u);
  DEF_AVMeth_divider_response_get = INST_divider.METH_response_get();
  DEF_divider_response_get___d127 = DEF_AVMeth_divider_response_get;
  INST_quire.METH_accumulate_put(DEF_divider_response_get___d127);
  INST_cmd_stg3_f.METH_deq();
  INST_ops_in_flight.METH_port1__write(DEF_x1__h3111);
}

void MOD_mkPositCore::RL_rl_posit_to_float_stg3()
{
  tUInt8 DEF_ptof_response_get_33_BIT_0___d139;
  tUInt8 DEF_ptof_response_get_33_BITS_2_TO_1___d136;
  tUInt64 DEF_ptof_response_get___d133;
  tUInt64 DEF_AVMeth_ptof_response_get;
  DEF_AVMeth_ptof_response_get = INST_ptof.METH_response_get();
  DEF_ptof_response_get___d133 = DEF_AVMeth_ptof_response_get;
  DEF_ptof_response_get_33_BITS_2_TO_1___d136 = (tUInt8)((tUInt8)3u & (DEF_ptof_response_get___d133 >> 1u));
  DEF_ptof_response_get_33_BIT_0___d139 = (tUInt8)((tUInt8)1u & DEF_ptof_response_get___d133);
  DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135.set_bits_in_word(UWide_literal_101_haaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word8(3u,
																		0u,
																		5u),
										 4u,
										 0u,
										 5u).set_whole_word(UWide_literal_101_haaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(2u),
												    3u).set_whole_word(UWide_literal_101_haaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(1u),
														       2u).build_concat((((tUInt64)(UWide_literal_101_haaaaaaaaaaaaaaaaaaaaaaaaa.get_whole_word(0u))) << 32u) | (tUInt64)((tUInt32)(DEF_ptof_response_get___d133 >> 3u)),
																	0u,
																	64u);
  DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142.set_bits_in_word(4095u & ((((tUInt32)((tUInt8)1u)) << 10u) | primExtract32(10u,
																	    133u,
																	    DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135,
																	    32u,
																	    132u,
																	    32u,
																	    123u)),
										  4u,
										  0u,
										  12u).set_whole_word(primExtract32(32u,
														    133u,
														    DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135,
														    32u,
														    122u,
														    32u,
														    91u),
												      3u).set_whole_word(primExtract32(32u,
																       133u,
																       DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135,
																       32u,
																       90u,
																       32u,
																       59u),
															 2u).set_whole_word(primExtract32(32u,
																			  133u,
																			  DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135,
																			  32u,
																			  58u,
																			  32u,
																			  27u),
																	    1u).set_whole_word(((((DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135.get_bits_in_word32(0u,
																														    0u,
																														    27u) << 5u) | (((tUInt32)((tUInt8)0u)) << 3u)) | (((tUInt32)(DEF_ptof_response_get_33_BITS_2_TO_1___d136 == (tUInt8)1u)) << 2u)) | (((tUInt32)(DEF_ptof_response_get_33_BITS_2_TO_1___d136 == (tUInt8)2u && DEF_ptof_response_get_33_BIT_0___d139)) << 1u)) | (tUInt32)(DEF_ptof_response_get_33_BIT_0___d139),
																			       0u);
  INST_ffO.METH_enq(DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142);
  INST_cmd_stg3_f.METH_deq();
}

void MOD_mkPositCore::RL_rl_float_to_posit_stg3()
{
  tUInt32 DEF_AVMeth_normalizer_response_get;
  DEF_AVMeth_normalizer_response_get = INST_normalizer.METH_response_get();
  DEF_normalizer_response_get___d147 = DEF_AVMeth_normalizer_response_get;
  DEF_normalizer_response_get_47_BITS_3_TO_2___d151 = (tUInt8)((tUInt8)3u & (DEF_normalizer_response_get___d147 >> 2u));
  DEF_normalizer_response_get_47_BIT_0___d154 = (tUInt8)((tUInt8)1u & DEF_normalizer_response_get___d147);
  DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149.set_bits_in_word(UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word8(3u,
																		    16u,
																		    5u),
										 4u,
										 0u,
										 5u).set_whole_word(primExtract32(32u,
														  117u,
														  UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa,
														  32u,
														  111u,
														  32u,
														  80u),
												    3u).set_whole_word(primExtract32(32u,
																     117u,
																     UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa,
																     32u,
																     79u,
																     32u,
																     48u),
														       2u).set_whole_word(primExtract32(32u,
																			117u,
																			UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa,
																			32u,
																			47u,
																			32u,
																			16u),
																	  1u).set_whole_word((UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word32(0u,
																												  0u,
																												  16u) << 16u) | (tUInt32)(DEF_normalizer_response_get___d147 >> 4u),
																			     0u);
  DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158.set_bits_in_word(4095u & ((((tUInt32)((tUInt8)2u)) << 10u) | primExtract32(10u,
																	    133u,
																	    DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149,
																	    32u,
																	    132u,
																	    32u,
																	    123u)),
										  4u,
										  0u,
										  12u).set_whole_word(primExtract32(32u,
														    133u,
														    DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149,
														    32u,
														    122u,
														    32u,
														    91u),
												      3u).set_whole_word(primExtract32(32u,
																       133u,
																       DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149,
																       32u,
																       90u,
																       32u,
																       59u),
															 2u).set_whole_word(primExtract32(32u,
																			  133u,
																			  DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149,
																			  32u,
																			  58u,
																			  32u,
																			  27u),
																	    1u).set_whole_word((((((DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149.get_bits_in_word32(0u,
																														     0u,
																														     27u) << 5u) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_normalizer_response_get___d147 >> 1u)))) << 4u)) | (((tUInt32)((tUInt8)0u)) << 3u)) | (((tUInt32)(DEF_normalizer_response_get_47_BITS_3_TO_2___d151 == (tUInt8)1u)) << 2u)) | (((tUInt32)(DEF_normalizer_response_get_47_BITS_3_TO_2___d151 == (tUInt8)2u && DEF_normalizer_response_get_47_BIT_0___d154)) << 1u)) | (tUInt32)(DEF_normalizer_response_get_47_BIT_0___d154),
																			       0u);
  INST_ffO.METH_enq(DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158);
  INST_cmd_stg3_f.METH_deq();
}

void MOD_mkPositCore::RL_rl_read_quire_stg3()
{
  tUInt32 DEF_AVMeth_normalizer_response_get;
  DEF_AVMeth_normalizer_response_get = INST_normalizer.METH_response_get();
  DEF_normalizer_response_get___d147 = DEF_AVMeth_normalizer_response_get;
  DEF_normalizer_response_get_47_BITS_3_TO_2___d151 = (tUInt8)((tUInt8)3u & (DEF_normalizer_response_get___d147 >> 2u));
  DEF_normalizer_response_get_47_BIT_0___d154 = (tUInt8)((tUInt8)1u & DEF_normalizer_response_get___d147);
  DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149.set_bits_in_word(UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word8(3u,
																		    16u,
																		    5u),
										 4u,
										 0u,
										 5u).set_whole_word(primExtract32(32u,
														  117u,
														  UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa,
														  32u,
														  111u,
														  32u,
														  80u),
												    3u).set_whole_word(primExtract32(32u,
																     117u,
																     UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa,
																     32u,
																     79u,
																     32u,
																     48u),
														       2u).set_whole_word(primExtract32(32u,
																			117u,
																			UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa,
																			32u,
																			47u,
																			32u,
																			16u),
																	  1u).set_whole_word((UWide_literal_117_haaaaaaaaaaaaaaaaaaaaaaaaaaaaa.get_bits_in_word32(0u,
																												  0u,
																												  16u) << 16u) | (tUInt32)(DEF_normalizer_response_get___d147 >> 4u),
																			     0u);
  DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158.set_bits_in_word(4095u & ((((tUInt32)((tUInt8)2u)) << 10u) | primExtract32(10u,
																	    133u,
																	    DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149,
																	    32u,
																	    132u,
																	    32u,
																	    123u)),
										  4u,
										  0u,
										  12u).set_whole_word(primExtract32(32u,
														    133u,
														    DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149,
														    32u,
														    122u,
														    32u,
														    91u),
												      3u).set_whole_word(primExtract32(32u,
																       133u,
																       DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149,
																       32u,
																       90u,
																       32u,
																       59u),
															 2u).set_whole_word(primExtract32(32u,
																			  133u,
																			  DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149,
																			  32u,
																			  58u,
																			  32u,
																			  27u),
																	    1u).set_whole_word((((((DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149.get_bits_in_word32(0u,
																														     0u,
																														     27u) << 5u) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_normalizer_response_get___d147 >> 1u)))) << 4u)) | (((tUInt32)((tUInt8)0u)) << 3u)) | (((tUInt32)(DEF_normalizer_response_get_47_BITS_3_TO_2___d151 == (tUInt8)1u)) << 2u)) | (((tUInt32)(DEF_normalizer_response_get_47_BITS_3_TO_2___d151 == (tUInt8)2u && DEF_normalizer_response_get_47_BIT_0___d154)) << 1u)) | (tUInt32)(DEF_normalizer_response_get_47_BIT_0___d154),
																			       0u);
  INST_ffO.METH_enq(DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158);
  INST_cmd_stg3_f.METH_deq();
}


/* Methods */

void MOD_mkPositCore::METH_server_core_request_put(tUWide ARG_server_core_request_put)
{
  PORT_server_core_request_put = ARG_server_core_request_put;
  INST_ffI.METH_enq(ARG_server_core_request_put);
}

tUInt8 MOD_mkPositCore::METH_RDY_server_core_request_put()
{
  tUInt8 DEF_CAN_FIRE_server_core_request_put;
  tUInt8 PORT_RDY_server_core_request_put;
  DEF_CAN_FIRE_server_core_request_put = INST_ffI.METH_i_notFull();
  PORT_RDY_server_core_request_put = DEF_CAN_FIRE_server_core_request_put;
  return PORT_RDY_server_core_request_put;
}

tUWide MOD_mkPositCore::METH_server_core_response_get()
{
  DEF_ffO_first____d161 = INST_ffO.METH_first();
  PORT_server_core_response_get = DEF_ffO_first____d161;
  INST_ffO.METH_deq();
  return PORT_server_core_response_get;
}

tUInt8 MOD_mkPositCore::METH_RDY_server_core_response_get()
{
  tUInt8 DEF_CAN_FIRE_server_core_response_get;
  tUInt8 PORT_RDY_server_core_response_get;
  DEF_CAN_FIRE_server_core_response_get = INST_ffO.METH_i_notEmpty();
  PORT_RDY_server_core_response_get = DEF_CAN_FIRE_server_core_response_get;
  return PORT_RDY_server_core_response_get;
}


/* Reset routines */

void MOD_mkPositCore::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_quire.reset_RST_N(ARG_rst_in);
  INST_ptof.reset_RST_N(ARG_rst_in);
  INST_ops_in_flight.reset_RST(ARG_rst_in);
  INST_normalizer.reset_RST_N(ARG_rst_in);
  INST_multiplier.reset_RST_N(ARG_rst_in);
  INST_ftop.reset_RST_N(ARG_rst_in);
  INST_ffO.reset_RST(ARG_rst_in);
  INST_ffI.reset_RST(ARG_rst_in);
  INST_extracter2.reset_RST_N(ARG_rst_in);
  INST_extracter1.reset_RST_N(ARG_rst_in);
  INST_divider.reset_RST_N(ARG_rst_in);
  INST_cmd_stg3_f.reset_RST(ARG_rst_in);
  INST_cmd_stg2_f.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkPositCore::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkPositCore::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cmd_stg2_f.dump_state(indent + 2u);
  INST_cmd_stg3_f.dump_state(indent + 2u);
  INST_divider.dump_state(indent + 2u);
  INST_extracter1.dump_state(indent + 2u);
  INST_extracter2.dump_state(indent + 2u);
  INST_ffI.dump_state(indent + 2u);
  INST_ffO.dump_state(indent + 2u);
  INST_ftop.dump_state(indent + 2u);
  INST_multiplier.dump_state(indent + 2u);
  INST_normalizer.dump_state(indent + 2u);
  INST_ops_in_flight.dump_state(indent + 2u);
  INST_ptof.dump_state(indent + 2u);
  INST_quire.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkPositCore::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 27u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149", 133u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135", 133u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142", 140u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158", 140u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_3_CONCAT_quire_read_quire__2_CONCAT_0___d53", 140u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cmd_stg2_f_first____d68", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "divider_response_get___d127", 133u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75", 42u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "extracter1_response_get___d73", 21u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ffI_first_BITS_3_TO_0___d9", 4u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ffI_first____d8", 277u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ffO_first____d161", 140u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "multiplier_response_get___d118", 133u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "normalizer_response_get_47_BITS_3_TO_2___d151", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "normalizer_response_get_47_BIT_0___d154", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "normalizer_response_get___d147", 20u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "quire_read_quire____d52", 133u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x1__h3111", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h3117", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "server_core_request_put", 277u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "server_core_response_get", 140u);
  num = INST_cmd_stg2_f.dump_VCD_defs(num);
  num = INST_cmd_stg3_f.dump_VCD_defs(num);
  num = INST_ffI.dump_VCD_defs(num);
  num = INST_ffO.dump_VCD_defs(num);
  num = INST_ops_in_flight.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_divider.dump_VCD_defs(l);
    num = INST_extracter1.dump_VCD_defs(l);
    num = INST_extracter2.dump_VCD_defs(l);
    num = INST_ftop.dump_VCD_defs(l);
    num = INST_multiplier.dump_VCD_defs(l);
    num = INST_normalizer.dump_VCD_defs(l);
    num = INST_ptof.dump_VCD_defs(l);
    num = INST_quire.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkPositCore::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkPositCore &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkPositCore::vcd_defs(tVCDDumpType dt, MOD_mkPositCore &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 133u);
    vcd_write_x(sim_hdl, num++, 133u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 140u);
    vcd_write_x(sim_hdl, num++, 140u);
    vcd_write_x(sim_hdl, num++, 140u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 133u);
    vcd_write_x(sim_hdl, num++, 42u);
    vcd_write_x(sim_hdl, num++, 21u);
    vcd_write_x(sim_hdl, num++, 4u);
    vcd_write_x(sim_hdl, num++, 277u);
    vcd_write_x(sim_hdl, num++, 140u);
    vcd_write_x(sim_hdl, num++, 133u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 20u);
    vcd_write_x(sim_hdl, num++, 133u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 277u);
    vcd_write_x(sim_hdl, num++, 140u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149) != DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149)
      {
	vcd_write_val(sim_hdl, num, DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149, 133u);
	backing.DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149 = DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149;
      }
      ++num;
      if ((backing.DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135) != DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135)
      {
	vcd_write_val(sim_hdl, num, DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135, 133u);
	backing.DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135 = DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142) != DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142, 140u);
	backing.DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142 = DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142;
      }
      ++num;
      if ((backing.DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158) != DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158)
      {
	vcd_write_val(sim_hdl, num, DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158, 140u);
	backing.DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158 = DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158;
      }
      ++num;
      if ((backing.DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53) != DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53)
      {
	vcd_write_val(sim_hdl, num, DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53, 140u);
	backing.DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53 = DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53;
      }
      ++num;
      if ((backing.DEF_cmd_stg2_f_first____d68) != DEF_cmd_stg2_f_first____d68)
      {
	vcd_write_val(sim_hdl, num, DEF_cmd_stg2_f_first____d68, 4u);
	backing.DEF_cmd_stg2_f_first____d68 = DEF_cmd_stg2_f_first____d68;
      }
      ++num;
      if ((backing.DEF_divider_response_get___d127) != DEF_divider_response_get___d127)
      {
	vcd_write_val(sim_hdl, num, DEF_divider_response_get___d127, 133u);
	backing.DEF_divider_response_get___d127 = DEF_divider_response_get___d127;
      }
      ++num;
      if ((backing.DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75) != DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75)
      {
	vcd_write_val(sim_hdl, num, DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75, 42u);
	backing.DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75 = DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75;
      }
      ++num;
      if ((backing.DEF_extracter1_response_get___d73) != DEF_extracter1_response_get___d73)
      {
	vcd_write_val(sim_hdl, num, DEF_extracter1_response_get___d73, 21u);
	backing.DEF_extracter1_response_get___d73 = DEF_extracter1_response_get___d73;
      }
      ++num;
      if ((backing.DEF_ffI_first_BITS_3_TO_0___d9) != DEF_ffI_first_BITS_3_TO_0___d9)
      {
	vcd_write_val(sim_hdl, num, DEF_ffI_first_BITS_3_TO_0___d9, 4u);
	backing.DEF_ffI_first_BITS_3_TO_0___d9 = DEF_ffI_first_BITS_3_TO_0___d9;
      }
      ++num;
      if ((backing.DEF_ffI_first____d8) != DEF_ffI_first____d8)
      {
	vcd_write_val(sim_hdl, num, DEF_ffI_first____d8, 277u);
	backing.DEF_ffI_first____d8 = DEF_ffI_first____d8;
      }
      ++num;
      if ((backing.DEF_ffO_first____d161) != DEF_ffO_first____d161)
      {
	vcd_write_val(sim_hdl, num, DEF_ffO_first____d161, 140u);
	backing.DEF_ffO_first____d161 = DEF_ffO_first____d161;
      }
      ++num;
      if ((backing.DEF_multiplier_response_get___d118) != DEF_multiplier_response_get___d118)
      {
	vcd_write_val(sim_hdl, num, DEF_multiplier_response_get___d118, 133u);
	backing.DEF_multiplier_response_get___d118 = DEF_multiplier_response_get___d118;
      }
      ++num;
      if ((backing.DEF_normalizer_response_get_47_BITS_3_TO_2___d151) != DEF_normalizer_response_get_47_BITS_3_TO_2___d151)
      {
	vcd_write_val(sim_hdl, num, DEF_normalizer_response_get_47_BITS_3_TO_2___d151, 2u);
	backing.DEF_normalizer_response_get_47_BITS_3_TO_2___d151 = DEF_normalizer_response_get_47_BITS_3_TO_2___d151;
      }
      ++num;
      if ((backing.DEF_normalizer_response_get_47_BIT_0___d154) != DEF_normalizer_response_get_47_BIT_0___d154)
      {
	vcd_write_val(sim_hdl, num, DEF_normalizer_response_get_47_BIT_0___d154, 1u);
	backing.DEF_normalizer_response_get_47_BIT_0___d154 = DEF_normalizer_response_get_47_BIT_0___d154;
      }
      ++num;
      if ((backing.DEF_normalizer_response_get___d147) != DEF_normalizer_response_get___d147)
      {
	vcd_write_val(sim_hdl, num, DEF_normalizer_response_get___d147, 20u);
	backing.DEF_normalizer_response_get___d147 = DEF_normalizer_response_get___d147;
      }
      ++num;
      if ((backing.DEF_quire_read_quire____d52) != DEF_quire_read_quire____d52)
      {
	vcd_write_val(sim_hdl, num, DEF_quire_read_quire____d52, 133u);
	backing.DEF_quire_read_quire____d52 = DEF_quire_read_quire____d52;
      }
      ++num;
      if ((backing.DEF_x1__h3111) != DEF_x1__h3111)
      {
	vcd_write_val(sim_hdl, num, DEF_x1__h3111, 3u);
	backing.DEF_x1__h3111 = DEF_x1__h3111;
      }
      ++num;
      if ((backing.DEF_x__h3117) != DEF_x__h3117)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h3117, 3u);
	backing.DEF_x__h3117 = DEF_x__h3117;
      }
      ++num;
      if ((backing.PORT_server_core_request_put) != PORT_server_core_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_server_core_request_put, 277u);
	backing.PORT_server_core_request_put = PORT_server_core_request_put;
      }
      ++num;
      if ((backing.PORT_server_core_response_get) != PORT_server_core_response_get)
      {
	vcd_write_val(sim_hdl, num, PORT_server_core_response_get, 140u);
	backing.PORT_server_core_response_get = PORT_server_core_response_get;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149, 133u);
      backing.DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149 = DEF_DONTCARE_CONCAT_normalizer_response_get_47_BIT_ETC___d149;
      vcd_write_val(sim_hdl, num++, DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135, 133u);
      backing.DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135 = DEF_DONTCARE_CONCAT_ptof_response_get_33_BITS_34_T_ETC___d135;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142, 140u);
      backing.DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142 = DEF__1_CONCAT_DONTCARE_CONCAT_ptof_response_get_33__ETC___d142;
      vcd_write_val(sim_hdl, num++, DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158, 140u);
      backing.DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158 = DEF__2_CONCAT_DONTCARE_CONCAT_normalizer_response_g_ETC___d158;
      vcd_write_val(sim_hdl, num++, DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53, 140u);
      backing.DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53 = DEF__3_CONCAT_quire_read_quire__2_CONCAT_0___d53;
      vcd_write_val(sim_hdl, num++, DEF_cmd_stg2_f_first____d68, 4u);
      backing.DEF_cmd_stg2_f_first____d68 = DEF_cmd_stg2_f_first____d68;
      vcd_write_val(sim_hdl, num++, DEF_divider_response_get___d127, 133u);
      backing.DEF_divider_response_get___d127 = DEF_divider_response_get___d127;
      vcd_write_val(sim_hdl, num++, DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75, 42u);
      backing.DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75 = DEF_extracter1_response_get_3_CONCAT_extracter2_re_ETC___d75;
      vcd_write_val(sim_hdl, num++, DEF_extracter1_response_get___d73, 21u);
      backing.DEF_extracter1_response_get___d73 = DEF_extracter1_response_get___d73;
      vcd_write_val(sim_hdl, num++, DEF_ffI_first_BITS_3_TO_0___d9, 4u);
      backing.DEF_ffI_first_BITS_3_TO_0___d9 = DEF_ffI_first_BITS_3_TO_0___d9;
      vcd_write_val(sim_hdl, num++, DEF_ffI_first____d8, 277u);
      backing.DEF_ffI_first____d8 = DEF_ffI_first____d8;
      vcd_write_val(sim_hdl, num++, DEF_ffO_first____d161, 140u);
      backing.DEF_ffO_first____d161 = DEF_ffO_first____d161;
      vcd_write_val(sim_hdl, num++, DEF_multiplier_response_get___d118, 133u);
      backing.DEF_multiplier_response_get___d118 = DEF_multiplier_response_get___d118;
      vcd_write_val(sim_hdl, num++, DEF_normalizer_response_get_47_BITS_3_TO_2___d151, 2u);
      backing.DEF_normalizer_response_get_47_BITS_3_TO_2___d151 = DEF_normalizer_response_get_47_BITS_3_TO_2___d151;
      vcd_write_val(sim_hdl, num++, DEF_normalizer_response_get_47_BIT_0___d154, 1u);
      backing.DEF_normalizer_response_get_47_BIT_0___d154 = DEF_normalizer_response_get_47_BIT_0___d154;
      vcd_write_val(sim_hdl, num++, DEF_normalizer_response_get___d147, 20u);
      backing.DEF_normalizer_response_get___d147 = DEF_normalizer_response_get___d147;
      vcd_write_val(sim_hdl, num++, DEF_quire_read_quire____d52, 133u);
      backing.DEF_quire_read_quire____d52 = DEF_quire_read_quire____d52;
      vcd_write_val(sim_hdl, num++, DEF_x1__h3111, 3u);
      backing.DEF_x1__h3111 = DEF_x1__h3111;
      vcd_write_val(sim_hdl, num++, DEF_x__h3117, 3u);
      backing.DEF_x__h3117 = DEF_x__h3117;
      vcd_write_val(sim_hdl, num++, PORT_server_core_request_put, 277u);
      backing.PORT_server_core_request_put = PORT_server_core_request_put;
      vcd_write_val(sim_hdl, num++, PORT_server_core_response_get, 140u);
      backing.PORT_server_core_response_get = PORT_server_core_response_get;
    }
}

void MOD_mkPositCore::vcd_prims(tVCDDumpType dt, MOD_mkPositCore &backing)
{
  INST_cmd_stg2_f.dump_VCD(dt, backing.INST_cmd_stg2_f);
  INST_cmd_stg3_f.dump_VCD(dt, backing.INST_cmd_stg3_f);
  INST_ffI.dump_VCD(dt, backing.INST_ffI);
  INST_ffO.dump_VCD(dt, backing.INST_ffO);
  INST_ops_in_flight.dump_VCD(dt, backing.INST_ops_in_flight);
}

void MOD_mkPositCore::vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkPositCore &backing)
{
  INST_divider.dump_VCD(dt, levels, backing.INST_divider);
  INST_extracter1.dump_VCD(dt, levels, backing.INST_extracter1);
  INST_extracter2.dump_VCD(dt, levels, backing.INST_extracter2);
  INST_ftop.dump_VCD(dt, levels, backing.INST_ftop);
  INST_multiplier.dump_VCD(dt, levels, backing.INST_multiplier);
  INST_normalizer.dump_VCD(dt, levels, backing.INST_normalizer);
  INST_ptof.dump_VCD(dt, levels, backing.INST_ptof);
  INST_quire.dump_VCD(dt, levels, backing.INST_quire);
}
