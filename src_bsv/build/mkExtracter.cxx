/*
 * Generated by Bluespec Compiler (build cd96b228)
 * 
 * On Tue Jun 15 18:31:46 IST 2021
 * 
 */
#include "bluesim_primitives.h"
#include "mkExtracter.h"


/* String declarations */
static std::string const __str_literal_1("%0d: %m.request: 0x%08x", 23u);


/* Constructor */
MOD_mkExtracter::MOD_mkExtracter(tSimStateHdl simHdl,
				 char const *name,
				 Module *parent,
				 tUInt8 ARG_verbosity)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_ff_extract_out(simHdl, "ff_extract_out", this, 21u, 1u, (tUInt8)1u, 0u),
    PORT_RST_N((tUInt8)1u),
    PORT_verbosity(ARG_verbosity),
    DEF_v__h6086(2863311530u)
{
  symbol_count = 2u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkExtracter::init_symbols_0()
{
  init_symbol(&symbols[0u], "ff_extract_out", SYM_MODULE, &INST_ff_extract_out);
  init_symbol(&symbols[1u], "verbosity", SYM_PORT, &PORT_verbosity, 2u);
}


/* Rule actions */


/* Methods */

void MOD_mkExtracter::METH_request_put(tUInt32 ARG_request_put)
{
  tUInt32 DEF_IF_request_put_BITS_14_TO_0_EQ_0_AND_NOT_reque_ETC___d182;
  tUInt8 DEF_x__h3154;
  tUInt32 DEF_frac__h143;
  tUInt32 DEF_v__h6080;
  tUInt8 DEF_NOT_verbosity_ULE_1_83___d184;
  tUInt8 DEF_request_put_BITS_14_TO_0_EQ_0___d2;
  tUInt8 DEF_expo__h142;
  tUInt8 DEF_x__h692;
  tUInt8 DEF_IF_IF_request_put_BIT_15_THEN_0_MINUS_request__ETC___d140;
  tUInt8 DEF_x__h3161;
  tUInt8 DEF_b__h684;
  tUInt8 DEF_b__h682;
  tUInt32 DEF_x__h5901;
  tUInt8 DEF_request_put_BITS_14_TO_0_EQ_0_AND_NOT_request__ETC___d5;
  tUInt8 DEF_x__h5852;
  tUInt8 DEF_request_put_BIT_15___d3;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d58;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d57;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d56;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d55;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d54;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d53;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d52;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d51;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d50;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d49;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d48;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d47;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d46;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d45;
  tUInt8 DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d11;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d27;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d26;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d25;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d24;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d23;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d22;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d21;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d20;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d19;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d18;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d17;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d16;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d15;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d14;
  tUInt32 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12;
  tUInt8 DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d13;
  tUInt32 DEF_new_inp__h135;
  tUInt32 DEF_new_inp_BITS_11_TO_0___h5898;
  tUInt32 DEF_request_put_BITS_14_TO_0___d1;
  DEF_request_put_BITS_14_TO_0___d1 = (tUInt32)(32767u & ARG_request_put);
  DEF_request_put_BIT_15___d3 = (tUInt8)(ARG_request_put >> 15u);
  DEF_new_inp__h135 = DEF_request_put_BIT_15___d3 ? 32767u & (0u - DEF_request_put_BITS_14_TO_0___d1) : DEF_request_put_BITS_14_TO_0___d1;
  DEF_new_inp_BITS_11_TO_0___h5898 = (tUInt32)(4095u & DEF_new_inp__h135);
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 = 32767u & ~DEF_new_inp__h135;
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d13 = (tUInt8)(DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 14u);
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d14 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 13u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d15 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 12u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d16 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 11u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d17 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 10u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d18 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 9u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d19 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 8u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d21 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 6u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d20 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 7u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d22 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 5u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d24 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 3u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d23 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 4u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d25 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 2u));
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d26 = (tUInt8)((tUInt8)1u & (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12 >> 1u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d11 = (tUInt8)(DEF_new_inp__h135 >> 14u);
  DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d27 = (tUInt8)((tUInt8)1u & DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d12);
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d45 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 13u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d46 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 12u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d47 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 11u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d48 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 10u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d50 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 8u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d49 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 9u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d51 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 7u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d52 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 6u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d53 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 5u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d54 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 4u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d55 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 3u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d57 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 1u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d56 = (tUInt8)((tUInt8)1u & (DEF_new_inp__h135 >> 2u));
  DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d58 = (tUInt8)((tUInt8)1u & DEF_new_inp__h135);
  DEF_x__h3161 = DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d11 ? (tUInt8)0u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d45 ? (tUInt8)1u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d46 ? (tUInt8)2u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d47 ? (tUInt8)3u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d48 ? (tUInt8)4u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d49 ? (tUInt8)5u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d50 ? (tUInt8)6u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d51 ? (tUInt8)7u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d52 ? (tUInt8)8u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d53 ? (tUInt8)9u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d54 ? (tUInt8)10u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d55 ? (tUInt8)11u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d56 ? (tUInt8)12u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d57 ? (tUInt8)13u : (DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d58 ? (tUInt8)14u : (tUInt8)15u))))))))))))));
  DEF_x__h692 = DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d13 ? (tUInt8)0u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d14 ? (tUInt8)1u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d15 ? (tUInt8)2u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d16 ? (tUInt8)3u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d17 ? (tUInt8)4u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d18 ? (tUInt8)5u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d19 ? (tUInt8)6u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d20 ? (tUInt8)7u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d21 ? (tUInt8)8u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d22 ? (tUInt8)9u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d23 ? (tUInt8)10u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d24 ? (tUInt8)11u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d25 ? (tUInt8)12u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d26 ? (tUInt8)13u : (DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d27 ? (tUInt8)14u : (tUInt8)15u))))))))))))));
  DEF_b__h682 = (tUInt8)31u & (((tUInt8)31u & DEF_x__h692) - (tUInt8)1u);
  DEF_IF_IF_request_put_BIT_15_THEN_0_MINUS_request__ETC___d140 = DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d11 ? (tUInt8)15u & ((!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d13 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d14 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d15 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d16 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d17 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d18 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d19 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d20 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d21 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d22 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d23 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d24 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d25 && (!DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d26 && !DEF_INV_IF_request_put_BIT_15_THEN_0_MINUS_request_ETC___d27))))))))))))) ? (tUInt8)15u : (tUInt8)14u) - DEF_x__h692) : (tUInt8)15u & ((!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d45 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d46 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d47 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d48 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d49 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d50 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d51 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d52 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d53 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d54 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d55 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d56 && (!DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d57 && !DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d58)))))))))))) ? (tUInt8)15u : (tUInt8)14u) - DEF_x__h3161);
  DEF_x__h5852 = (tUInt8)15u & (DEF_IF_IF_request_put_BIT_15_THEN_0_MINUS_request__ETC___d140 - (tUInt8)1u);
  switch (DEF_IF_IF_request_put_BIT_15_THEN_0_MINUS_request__ETC___d140) {
  case (tUInt8)13u:
    DEF_x__h5901 = 0u;
    break;
  case (tUInt8)12u:
    DEF_x__h5901 = 1u;
    break;
  case (tUInt8)11u:
    DEF_x__h5901 = 2u;
    break;
  case (tUInt8)10u:
    DEF_x__h5901 = 3u;
    break;
  case (tUInt8)9u:
    DEF_x__h5901 = 4u;
    break;
  case (tUInt8)8u:
    DEF_x__h5901 = 5u;
    break;
  case (tUInt8)7u:
    DEF_x__h5901 = 6u;
    break;
  case (tUInt8)6u:
    DEF_x__h5901 = 7u;
    break;
  case (tUInt8)5u:
    DEF_x__h5901 = 8u;
    break;
  case (tUInt8)4u:
    DEF_x__h5901 = 9u;
    break;
  case (tUInt8)3u:
    DEF_x__h5901 = 10u;
    break;
  case (tUInt8)2u:
    DEF_x__h5901 = 11u;
    break;
  default:
    DEF_x__h5901 = DEF_IF_IF_request_put_BIT_15_THEN_0_MINUS_request__ETC___d140 <= (tUInt8)1u || DEF_IF_IF_request_put_BIT_15_THEN_0_MINUS_request__ETC___d140 == (tUInt8)1u ? 12u : 0u;
  }
  DEF_expo__h142 = DEF_IF_IF_request_put_BIT_15_THEN_0_MINUS_request__ETC___d140 == (tUInt8)0u ? ((tUInt8)15u & ((tUInt8)1u - DEF_IF_IF_request_put_BIT_15_THEN_0_MINUS_request__ETC___d140)) == (tUInt8)0u && DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d58 : primExtract8(1u,
																																			   15u,
																																			   (tUInt32)(DEF_new_inp__h135),
																																			   4u,
																																			   (tUInt8)(DEF_x__h5852),
																																			   4u,
																																			   (tUInt8)(DEF_x__h5852));
  DEF_request_put_BITS_14_TO_0_EQ_0___d2 = DEF_request_put_BITS_14_TO_0___d1 == 0u;
  DEF_request_put_BITS_14_TO_0_EQ_0_AND_NOT_request__ETC___d5 = DEF_request_put_BITS_14_TO_0_EQ_0___d2 && !DEF_request_put_BIT_15___d3;
  DEF_NOT_verbosity_ULE_1_83___d184 = !(PORT_verbosity <= (tUInt8)1u);
  DEF_frac__h143 = primShiftL32(12u,
				12u,
				(tUInt32)(DEF_new_inp_BITS_11_TO_0___h5898),
				12u,
				(tUInt32)(DEF_x__h5901));
  DEF_x__h3154 = (tUInt8)31u & DEF_x__h3161;
  DEF_b__h684 = (tUInt8)31u & ((tUInt8)0u - DEF_x__h3154);
  DEF_IF_request_put_BITS_14_TO_0_EQ_0_AND_NOT_reque_ETC___d182 = 2097151u & (((((tUInt32)(DEF_request_put_BITS_14_TO_0_EQ_0_AND_NOT_request__ETC___d5 ? (tUInt8)2u : (DEF_request_put_BITS_14_TO_0_EQ_0___d2 && DEF_request_put_BIT_15___d3 ? (tUInt8)1u : (tUInt8)0u))) << 19u) | (((tUInt32)(DEF_request_put_BIT_15___d3)) << 18u)) | (DEF_request_put_BITS_14_TO_0_EQ_0_AND_NOT_request__ETC___d5 ? 0u : 262143u & ((((tUInt32)((tUInt8)63u & (((tUInt8)63u & (((tUInt8)((tUInt8)31u & primSignExt8(6u,
																																																													5u,
																																																													(tUInt8)(DEF_IF_request_put_BIT_15_THEN_0_MINUS_request_put_ETC___d11 ? DEF_b__h682 : DEF_b__h684)))) << 1u)) + ((tUInt8)63u & DEF_expo__h142)))) << 12u) | DEF_frac__h143)));
  INST_ff_extract_out.METH_enq(DEF_IF_request_put_BITS_14_TO_0_EQ_0_AND_NOT_reque_ETC___d182);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_verbosity_ULE_1_83___d184)
      DEF_v__h6086 = dollar_stime(sim_hdl);
    else
      DEF_v__h6086 = 2863311530u;
  DEF_v__h6080 = DEF_v__h6086 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_NOT_verbosity_ULE_1_83___d184)
      dollar_display(sim_hdl, this, "s,32,16", &__str_literal_1, DEF_v__h6080, ARG_request_put);
}

tUInt8 MOD_mkExtracter::METH_RDY_request_put()
{
  tUInt8 DEF_CAN_FIRE_request_put;
  tUInt8 PORT_RDY_request_put;
  DEF_CAN_FIRE_request_put = INST_ff_extract_out.METH_i_notFull();
  PORT_RDY_request_put = DEF_CAN_FIRE_request_put;
  return PORT_RDY_request_put;
}

tUInt32 MOD_mkExtracter::METH_response_get()
{
  tUInt32 DEF_response_get__avValue1;
  tUInt32 PORT_response_get;
  DEF_response_get__avValue1 = INST_ff_extract_out.METH_first();
  PORT_response_get = DEF_response_get__avValue1;
  INST_ff_extract_out.METH_deq();
  return PORT_response_get;
}

tUInt8 MOD_mkExtracter::METH_RDY_response_get()
{
  tUInt8 DEF_CAN_FIRE_response_get;
  tUInt8 PORT_RDY_response_get;
  DEF_CAN_FIRE_response_get = INST_ff_extract_out.METH_i_notEmpty();
  PORT_RDY_response_get = DEF_CAN_FIRE_response_get;
  return PORT_RDY_response_get;
}


/* Reset routines */

void MOD_mkExtracter::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_ff_extract_out.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkExtracter::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkExtracter::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_ff_extract_out.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkExtracter::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 3u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h6086", 32u);
  num = INST_ff_extract_out.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkExtracter::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkExtracter &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkExtracter::vcd_defs(tVCDDumpType dt, MOD_mkExtracter &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_v__h6086) != DEF_v__h6086)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h6086, 32u);
	backing.DEF_v__h6086 = DEF_v__h6086;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_v__h6086, 32u);
      backing.DEF_v__h6086 = DEF_v__h6086;
    }
}

void MOD_mkExtracter::vcd_prims(tVCDDumpType dt, MOD_mkExtracter &backing)
{
  INST_ff_extract_out.dump_VCD(dt, backing.INST_ff_extract_out);
}
